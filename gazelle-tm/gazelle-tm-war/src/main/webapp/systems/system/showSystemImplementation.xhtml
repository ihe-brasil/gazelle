<s:div xmlns:g="http://www.ihe.net/gazelle" xmlns:ui="http://java.sun.com/jsf/facelets"
       xmlns:h="http://java.sun.com/jsf/html" xmlns:rich="http://richfaces.org/rich"
       xmlns:s="http://jboss.org/schema/seam/taglib" xmlns:a4j="http://richfaces.org/a4j"
       xmlns="http://www.w3.org/1999/xhtml">

    <ui:decorate template="/layout/panels/_panel_title.xhtml">
        <ui:define name="panel_title">#{messages['gazelle.systems.system.DisplayIntegrationStatementLabel1']}
            #{systemInSessionEditor.getSystem().name}
        </ui:define>
        <p/>
        <h:panelGroup
                rendered="#{testingSessionManager.isRegistrationDeadlineExpired() and (s:hasRole('vendor_role') or s:hasRole('vendor_admin_role')) }">
            <p class="gzl-alert gzl-alert-orange">
                <span class="gzl-icon-history"/>
                <i>#{messages['gazelle.systems.system.RegistrationDeadlineExpired1']}
                </i>
                <i>#{messages['gazelle.systems.system.RegistrationDeadlineExpired3']}
                </i>
                <a href="mailto:#{gazelleDAO.getSelectedTestingSession().contactEmail}">#{gazelleDAO.getSelectedTestingSession().contactFirstname}
                    #{gazelleDAO.getSelectedTestingSession().contactLastname}</a>
                <i>#{messages['gazelle.systems.system.RegistrationDeadlineExpired4']}
                </i>
            </p>
        </h:panelGroup>

        <s:decorate id="iheImplentationsDecoration${panelId}">
            <s:div id="iheImplementationForSystemManagerShowDiv">
                #{iheImplementationForSystemManager.getAllIHEImplementationsForSystemInSession()}
                <div align="left">
                    <h:form>
                        <h:panelGroup rendered="#{applicationManager.isTestManagement()}">
                            <h:commandLink value="#{messages['gazelle.systems.system.GenerateSampleIS']}"
                                           action="#{iheImplementationForSystemManager.generatePDF(systemInSessionEditor.systemInSession)}"
                                           rendered="#{ not empty iheImplementationForSystemManager.iheImplementations and systemManager.canViewSystemInSessionAsVendor(systemInSessionEditor.systemInSession)}"
                                           styleClass="gzl-btn" target="_blank">
                                <span class="gzl-icon-pdf"/>
                            </h:commandLink>
                        </h:panelGroup>
                    </h:form>
                </div>
                <p/>
                <h:form>
                    <rich:dataTable id="iheImplementationForSystemManager" var="iheImplementationForSystem"
                                    value="#{iheImplementationForSystemManager.iheImplementationsToDisplay}"
                                    columnClasses="center">
                        <g:column style="text-align:right">
                            <ui:define name="header">
                                <h:outputText value="#{messages['gazelle.tf.IntegrationProfile']}"/>
                            </ui:define>
                            <g:link detailed="true" value="#{iheImplementationForSystem.integrationProfile}"/>
                        </g:column>
                        <g:column style="text-align:left">
                            <ui:define name="header">
                                <h:outputText value="#{messages['gazelle.tf.Actor']}"/>
                            </ui:define>
                            <g:link detailed="true" value="#{iheImplementationForSystem.actor}"/>
                        </g:column>
                        <g:column style="text-align:left">
                            <ui:define name="header">
                                <h:outputText value="#{messages['gazelle.tf.IntegrationProfileOption']}"/>
                            </ui:define>
                            <g:link detailed="true" value="#{iheImplementationForSystem.integrationProfileOption}"/>
                        </g:column>
                        <g:column rendered="#{applicationManager.isTestManagement()}">
                            <ui:define name="header">
                                <h:outputText value="#{messages['net.ihe.gazelle.tm.WantedTestingType']}"/>
                            </ui:define>
                            <h:outputText
                                    rendered="#{!testingTypeManager.couldSetWantedTestingType(iheImplementationForSystem)}"
                                    value="#{messages['gazelle.users.NA']}"/>
                            <s:span rendered="#{testingTypeManager.couldSetWantedTestingType(iheImplementationForSystem)}">
                                <s:span rendered="#{!testingTypeManager.canSetWantedTestingType(iheImplementationForSystem, systemInSessionEditor.getSystem())}">
                                    <h:outputText value="#{messages['net.ihe.gazelle.tm.NotSet']}"
                                                  rendered="#{empty iheImplementationForSystem.wantedTestingType}"/>
                                    <h:panelGrid columns="2"
                                                 rendered="#{not empty iheImplementationForSystem.wantedTestingType}">
                                        <h:outputText value="#{iheImplementationForSystem.wantedTestingType.name}"/>
                                    </h:panelGrid>
                                </s:span>
                                <h:selectOneMenu styleClass="form-control gzl-form-control"
                                                 value="#{iheImplementationForSystem.wantedTestingType}"
                                                 rendered="#{testingTypeManager.canSetWantedTestingType(iheImplementationForSystem, systemInSessionEditor.getSystem())}">
                                    <s:selectItems value="#{testingTypeManager.possibleTestingTypes}"
                                                   noSelectionLabel="#{messages['gazelle.common.PleaseSelect']}"
                                                   var="testingType" label="#{testingType.name}"/>
                                    <a4j:ajax event="change"
                                              render="iheImplementationForSystemManagerShowDiv,checkDependenciesResetButton,pdfButton"
                                              listener="#{testingTypeManager.setWantedTestingTypeFromListbox(iheImplementationForSystem)}"/>
                                </h:selectOneMenu>
                            </s:span>
                        </g:column>
                        <g:column rendered="#{applicationManager.isTestManagement()}">
                            <ui:define name="header">
                                <h:outputText value="#{messages['net.ihe.gazelle.tm.TestingTypeReviewed']}"/>
                            </ui:define>
                            <h:outputText value="#{iheImplementationForSystem.testingTypeReviewed}"
                                          rendered="#{testingTypeManager.getAIPO(iheImplementationForSystem).maybeSupportive and !testingTypeManager.canSetTestingType(iheImplementationForSystem)}"/>
                            <h:selectBooleanCheckbox styleClass="form-control-static"
                                                     rendered="#{testingTypeManager.getAIPO(iheImplementationForSystem).maybeSupportive and testingTypeManager.canSetTestingType(iheImplementationForSystem)}"
                                                     value="#{iheImplementationForSystem.testingTypeReviewed}">
                                <a4j:ajax event="click" execute="@this"
                                          listener="#{testingTypeManager.setTestingTypeReviewed(iheImplementationForSystem, systemInSessionEditor.getSystem())}"/>
                            </h:selectBooleanCheckbox>
                        </g:column>
                        <g:column rendered="#{applicationManager.isTestManagement()}">
                            <ui:define name="header">
                                <h:outputText value="#{messages['gazelle.systems.TestingType']}"/>
                            </ui:define>

                            <h:outputText value="#{iheImplementationForSystem.testingType.name}"
                                          rendered="#{!testingTypeManager.canSetTestingType(iheImplementationForSystem)}"/>

                            <h:selectOneMenu styleClass="form-control gzl-form-control"
                                             value="#{iheImplementationForSystem.testingType}"
                                             rendered="#{testingTypeManager.canSetTestingType(iheImplementationForSystem)}">
                                <s:selectItems value="#{testingTypeManager.possibleTestingTypes}"
                                               noSelectionLabel="#{messages['gazelle.common.PleaseSelect']}"
                                               var="testingType" label="#{testingType.name}"/>
                                <a4j:ajax event="change"
                                          render="iheImplementationForSystemManagerShowDiv,checkDependenciesResetButton,pdfButton"
                                          listener="#{testingTypeManager.setTestingTypeFromListbox(iheImplementationForSystem)}"/>
                            </h:selectOneMenu>
                        </g:column>
                    </rich:dataTable>
                </h:form>
            </s:div>

            <p/>
            <h:panelGroup rendered="#{ empty iheImplementationForSystemManager.iheImplementations}">
                <ui:decorate template="/layout/panels/_panel.xhtml">
                    <span class="gzl-icon-exclamation-triangle"/>

                    <p/>
                    <h:outputText id="noSystemLabel${panelId}"
                                  value="#{messages['gazelle.systems.system.NoIHEImplementationLabel1']}"
                                  style="font-style:italic"/>
                    <br/>
                    <h:outputText id="noSystemLabel2${panelId}"
                                  value="#{messages['gazelle.systems.system.NoIHEImplementationLabel2']}"
                                  style="font-style:italic"/>
                </ui:decorate>
            </h:panelGroup>
        </s:decorate>
    </ui:decorate>

</s:div>
