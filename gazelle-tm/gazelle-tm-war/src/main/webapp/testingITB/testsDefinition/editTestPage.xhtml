<ui:composition xmlns:g="http://www.ihe.net/gazelle" xmlns:ui="http://java.sun.com/jsf/facelets"
                xmlns:h="http://java.sun.com/jsf/html" xmlns:c="http://java.sun.com/jstl/core"
                xmlns:s="http://jboss.org/schema/seam/taglib" xmlns:rich="http://richfaces.org/rich"
                xmlns:a4j="http://richfaces.org/a4j"
                xmlns:f="http://java.sun.com/jsf/core" xmlns="http://www.w3.org/1999/xhtml"
                template="/layout/template.xhtml">

    <ui:param name="pageNameTitle" value="#{messages['gazelle.tm.EditTest']}"/>
    <ui:define name="body">
        <h:outputScript library="jscript" name="disable_input_spinner_mouse_wheel.js"/>
        #{testsDefinitionsAdministrationManager.parseURLParameters(true)}

        <c:set var="popupOptions"
               value="width=1000,height=400,location=no,menubar=yes,scrollbars=yes,status=no,resizable=yes"/>
        <c:set var="exampleMsgPopupOptions"
               value="width=800,height=200,location=no,menubar=yes,scrollbars=yes,status=no,resizable=yes"/>

        <h:form id="globalform">
            <a4j:jsFunction name="reRenderInitValiCtxUploadDialog"
                            actionListener="#{testsDefinitionsAdministrationManager.cancelFileUpload}"
                            render="initiatorValidationContextDecoration"/>
            <a4j:jsFunction name="reRenderRspValiCtxUploadDialog"
                            actionListener="#{testsDefinitionsAdministrationManager.cancelFileUpload}"
                            render="responderValidationContextDecoration"/>
            <a4j:jsFunction name="reRenderInitEgMsgUploadDialog"
                            actionListener="#{testsDefinitionsAdministrationManager.cancelFileUpload}"
                            render="initiatorExampleMsgDecoration"/>
            <a4j:jsFunction name="reRenderRspEgMsgUploadDialog"
                            actionListener="#{testsDefinitionsAdministrationManager.cancelFileUpload}"
                            render="responderExampleMsgDecoration"/>
            <s:token allowMultiplePosts="true"/>
            <ui:decorate template="/layout/panels/_panel_title_id.xhtml">
                <ui:param name="panel_id" value="AddTestPanel"/>
                <ui:define name="panel_title">
                    <h:outputText value="#{messages['gazelle.tm.AddNewTest']}"
                                  rendered="#{testsDefinitionsAdministrationManager.selectedTest.id == null}"/>
                    <h:outputText
                            value="#{messages['gazelle.tm.UpdateTest']} (#{testsDefinitionsAdministrationManager.selectedTest.keyword} : #{testsDefinitionsAdministrationManager.selectedTest.name})"
                            rendered="#{testsDefinitionsAdministrationManager.selectedTest.id != null}"/>
                </ui:define>
                <a4j:commandButton styleClass="gzl-btn" id="BackButton2zz"
                                   value="#{messages['gazelle.tm.BackToTestList']}"
                                   action="#{testsDefinitionsAdministrationManager.cancelTestCreationWithReturn()}"
                                   execute="@this"/>
                <div id="editTestTabPanel">
                    <!-- Nav tabs -->
                    <ul class="nav nav-tabs" role="tablist">
                        <li role="presentation" class="active"><a href="#editTestSummaryTab"
                                                                  aria-controls="editTestSummaryTab" role="tab"
                                                                  data-toggle="tab">#{messages['gazelle.tm.TestSummary']}</a>
                        </li>
                        <h:panelGroup
                                rendered="#{testsDefinitionsAdministrationManager.selectedTest.id != null and s:hasPermission('TestsDefinitionsAdministrationManager', 'EditTest', null)}">
                            <li role="presentation"><a href="#editTestDescriptionsTab"
                                                       aria-controls="editTestDescriptionsTab" role="tab"
                                                       data-toggle="tab">#{messages['gazelle.tm.test.TestDescription']}</a>
                            </li>
                        </h:panelGroup>
                        <h:panelGroup
                                rendered="#{testsDefinitionsAdministrationManager.selectedTest.id != null and s:hasPermission('TestsDefinitionsAdministrationManager', 'EditTest', null)}">
                            <li role="presentation"><a href="#editTestRolesTab" aria-controls="editTestRolesTab"
                                                       role="tab"
                                                       data-toggle="tab">#{messages['gazelle.tm.TestRoles']}</a></li>
                        </h:panelGroup>

                        <h:panelGroup
                                rendered="#{testsDefinitionsAdministrationManager.selectedTest.id != null and s:hasPermission('TestsDefinitionsAdministrationManager', 'EditTest', null)}">
                            <li role="presentation"><a href="#editTestStepsTab" aria-controls="editTestStepsTab"
                                                       role="tab"
                                                       data-toggle="tab">#{messages['gazelle.tm.TestSteps']}</a></li>
                        </h:panelGroup>
                    </ul>
                    <!-- Tab panes -->
                    <div class="tab-content">
                        <div role="tabpanel" class="tab-pane active" id="editTestSummaryTab">
                            <ui:decorate template="/layout/panels/_panel.xhtml">
                                <a4j:region id="testAuthorRegion"
                                            rendered="#{testsDefinitionsAdministrationManager.selectedTest.author != null and not empty testsDefinitionsAdministrationManager.selectedTest.author}">
                                    <s:decorate id="testAuthorDecoration" template="/layout/display/_display.xhtml">
                                        <ui:define name="label">#{messages['net.ihe.gazelle.tm.AuthorOfTheTestIs']}
                                        </ui:define>
                                        <h:outputText id="testAuthor"
                                                      value="#{testsDefinitionsAdministrationManager.selectedTest.author}"/>
                                    </s:decorate>
                                </a4j:region>
                                <a4j:region id="keywordRegion">
                                    <s:decorate id="keywordDecoration" template="/layout/form/_edit.xhtml">
                                        <ui:param name="id" value="keyword"/>
                                        <ui:define name="label">
                                            <span title="#{messages['gazelle.tm.AUniqueKeywordThatIdentifiesTheTest']}">
                                                #{messages['gazelle.testmanagement.object.keyword']}
                                            </span>
                                        </ui:define>
                                        <h:inputText styleClass=" form-control" id="keyword" maxlength="32" size="32"
                                                     value="#{testsDefinitionsAdministrationManager.selectedTest.keyword}"
                                                     required="true">
                                            <a4j:ajax event="blur" render="keywordDecoration"
                                                      listener="#{testsDefinitionsAdministrationManager.validateTestKeyword()}"/>
                                        </h:inputText>
                                    </s:decorate>
                                </a4j:region>
                                <a4j:region id="nameRegion">
                                    <s:decorate id="nameDecoration" template="/layout/form/_edit.xhtml">
                                        <ui:param name="id" value="name"/>
                                        <ui:define name="label">
                                            #{messages['gazelle.testmanagement.object.Name']}
                                        </ui:define>
                                        <h:inputText styleClass=" form-control" id="name" maxlength="64" size="80"
                                                     value="#{testsDefinitionsAdministrationManager.selectedTest.name}"
                                                     required="true">
                                            <a4j:ajax event="blur" render="nameDecoration"
                                                      listener="#{testsDefinitionsAdministrationManager.validateTestName()}"/>
                                        </h:inputText>
                                    </s:decorate>
                                </a4j:region>
                                <a4j:region id="shortDescriptionRegion">
                                    <s:decorate id="shortDescriptionDecoration" template="/layout/form/_edit.xhtml">
                                        <ui:param name="id" value="shortDescriptionInputTextArea"/>
                                        <ui:define name="label">
                                            <span title="#{messages['gazelle.tm.AShortDescriptionThatDescribesTheTest']}">
                                                #{messages['gazelle.tm.ShortDescription']}
                                            </span>
                                        </ui:define>
                                        <a4j:commandLink id="shortDescriptionSupport"
                                                         render="shortDescriptionDecoration"/>
                                        <h:inputTextarea styleClass=" form-control" id="shortDescriptionInputTextArea"
                                                         rows="3" cols="50"
                                                         value="#{testsDefinitionsAdministrationManager.selectedTest.shortDescription}"

                                                         required="true"/>
                                    </s:decorate>
                                </a4j:region>
                                <a4j:region id="testTypeRegion">
                                    <s:decorate id="testTypeDecoration" template="/layout/form/_edit.xhtml">
                                        <ui:param name="id" value="testStatusListBoxIfStatusNull"/>
                                        <ui:define name="label">
                                            <span title="#{messages['gazelle.tm.TheTypeOfTheTest']}">
                                                #{messages['gazelle.systems.session.Type']}
                                            </span>
                                        </ui:define>
                                        <h:selectOneMenu styleClass="form-control gzl-form-control"
                                                         id="testStatusListBoxIfStatusNull"
                                                         rendered="#{testsDefinitionsAdministrationManager.selectedTest.testType==null}"
                                                         value="#{testsDefinitionsAdministrationManager.selectedTest.testType}"
                                                         required="true">
                                            <s:selectItems id="testTypeSelectItemsIfStatusNull"
                                                           value="#{gazelleDAO.getTestTypeList()}" var="selectedType"
                                                           noSelectionLabel="#{messages['gazelle.common.PleaseSelect']}"
                                                           label="#{messages[selectedType.labelToDisplay]}"/>
                                            <a4j:ajax event="change" render="globalform"/>
                                        </h:selectOneMenu>
                                        <h:selectOneMenu styleClass="form-control gzl-form-control"
                                                         id="testStatusListBoxIfStatusNotNull"
                                                         rendered="#{testsDefinitionsAdministrationManager.selectedTest.testType!=null}"
                                                         value="#{testsDefinitionsAdministrationManager.selectedTest.testType}"
                                                         required="true">
                                            <s:selectItems id="testTypeSelectItemsIfStatusNotNull"
                                                           value="#{testsDefinitionsAdministrationManager.testTypeList}"
                                                           var="selectedType" hideNoSelectionLabel="true"
                                                           label="#{selectedType.keyword}"/>
                                            <a4j:ajax event="change" render="globalform"/>
                                        </h:selectOneMenu>
                                    </s:decorate>
                                </a4j:region>
                                <a4j:region id="testStatusRegion">
                                    <s:decorate id="testStatusDecoration" template="/layout/form/_edit.xhtml">
                                        <ui:param name="id" value="testStatusListBoxIfTestStatusNull"/>
                                        <ui:define name="label">
                                            <span title="#{messages['gazelle.tm.TheStatusOfTheTest']}">
                                                #{messages['gazelle.tm.tests.testStatus']}
                                            </span>
                                        </ui:define>
                                        <h:selectOneMenu styleClass="form-control gzl-form-control"
                                                         id="testStatusListBoxIfTestStatusNull"
                                                         rendered="#{testsDefinitionsAdministrationManager.selectedTest.testStatus==null}"
                                                         value="#{testsDefinitionsAdministrationManager.selectedTest.testStatus}">
                                            <s:selectItems id="testStatusSelectItemsIfTestStatusNull"
                                                           value="#{testsDefinitionsAdministrationManager.possibleTestStatus}"
                                                           var="selectedStatus"
                                                           noSelectionLabel="#{messages['gazelle.common.PleaseSelect']}"
                                                           label="#{messages[selectedStatus.labelToDisplay]}"/>
                                        </h:selectOneMenu>
                                        <h:selectOneMenu styleClass="form-control gzl-form-control"
                                                         id="testStatusListBoxIfTestStatusNotNull"
                                                         rendered="#{testsDefinitionsAdministrationManager.selectedTest.testStatus!=null}"
                                                         value="#{testsDefinitionsAdministrationManager.selectedTest.testStatus}">
                                            <s:selectItems id="testStatusSelectItemsIfTestStatusNotNull"
                                                           value="#{testsDefinitionsAdministrationManager.possibleTestStatus}"
                                                           var="selectedStatus" hideNoSelectionLabel="true"
                                                           label="#{messages[selectedStatus.labelToDisplay]}"/>
                                        </h:selectOneMenu>
                                    </s:decorate>
                                </a4j:region>
                                <a4j:region id="testPeerTypeRegion"
                                            rendered="#{testsDefinitionsAdministrationManager.selectedTest.testType.labelToDisplay=='connectathon'}">
                                    <s:decorate id="testPeerTypeDecoration" template="/layout/form/_edit.xhtml">
                                        <ui:param name="id" value="testPeerTypeListBoxIfTestStatusNull"/>
                                        <ui:define name="label">
                                            <span title="#{messages['gazelle.tm.TheStatusOfTheTest']}">
                                            #{messages['gazelle.tm.monitors.PeerType']}
                                            </span>
                                        </ui:define>
                                        <h:selectOneMenu styleClass="form-control gzl-form-control"
                                                         id="testPeerTypeListBoxIfTestStatusNull"
                                                         rendered="#{testsDefinitionsAdministrationManager.selectedTest.testPeerType==null}"
                                                         value="#{testsDefinitionsAdministrationManager.selectedTest.testPeerType}"
                                                         required="true">
                                            <s:selectItems id="testPeerTypeSelectItemsIfTestPeerTypeNull"
                                                           value="#{testsDefinitionsAdministrationManager.possibleTestPeerTypes}"
                                                           var="selectedPeerType"
                                                           noSelectionLabel="#{messages['gazelle.common.PleaseSelect']}"
                                                           label="#{messages[selectedPeerType.labelToDisplay]}"/>
                                        </h:selectOneMenu>
                                        <h:selectOneMenu styleClass="form-control gzl-form-control"
                                                         id="testPeerTypeListBoxIfTestPeerTypeNotNull"
                                                         rendered="#{testsDefinitionsAdministrationManager.selectedTest.testPeerType!=null}"
                                                         value="#{testsDefinitionsAdministrationManager.selectedTest.testPeerType}"
                                                         required="true">
                                            <s:selectItems id="testPeerTypeSelectItemsIfTestPeerTypeNotNull"
                                                           value="#{testsDefinitionsAdministrationManager.possibleTestPeerTypes}"
                                                           var="selectedPeerType" hideNoSelectionLabel="true"
                                                           label="#{messages[selectedPeerType.labelToDisplay]}"/>
                                        </h:selectOneMenu>
                                    </s:decorate>
                                </a4j:region>
                                <a4j:region id="testPeerTypeRegion2"
                                            rendered="#{testsDefinitionsAdministrationManager.selectedTest.testType.labelToDisplay!='connectathon'}">
                                    <s:decorate id="testPeerTypeDecoration2" template="/layout/form/_edit.xhtml">
                                        <ui:define name="label">
                                            <span title="#{messages['gazelle.tm.TheStatusOfTheTest']}">
                                                #{messages['gazelle.tm.monitors.PeerType']}
                                            </span>
                                        </ui:define>
                                        <h:selectOneMenu styleClass="form-control gzl-form-control"
                                                         id="testPeerTypeListBoxIfTestStatusNull2"
                                                         rendered="#{testsDefinitionsAdministrationManager.selectedTest.testPeerType==null}"
                                                         value="#{testsDefinitionsAdministrationManager.selectedTest.testPeerType}"
                                                         required="false">
                                            <s:selectItems id="testPeerTypeSelectItemsIfTestPeerTypeNull2"
                                                           value="#{testsDefinitionsAdministrationManager.possibleTestPeerTypes}"
                                                           var="selectedPeerType"
                                                           noSelectionLabel="#{messages['gazelle.common.PleaseSelect']}"
                                                           label="#{messages[selectedPeerType.labelToDisplay]}"/>
                                        </h:selectOneMenu>
                                        <h:selectOneMenu styleClass="form-control gzl-form-control"
                                                         id="testPeerTypeListBoxIfTestPeerTypeNotNull2"
                                                         rendered="#{testsDefinitionsAdministrationManager.selectedTest.testPeerType!=null}"
                                                         value="#{testsDefinitionsAdministrationManager.selectedTest.testPeerType}"
                                                         required="false">
                                            <s:selectItems id="testPeerTypeSelectItemsIfTestPeerTypeNotNull2"
                                                           value="#{testsDefinitionsAdministrationManager.possibleTestPeerTypes}"
                                                           var="selectedPeerType" hideNoSelectionLabel="true"
                                                           label="#{messages[selectedPeerType.labelToDisplay]}"/>
                                        </h:selectOneMenu>
                                    </s:decorate>
                                </a4j:region>
                                <a4j:region id="orchestrableRegion">
                                    <s:decorate id="orchestrableDecoration" template="/layout/form/_edit.xhtml">
                                        <ui:param name="id" value="orchestrableid"/>
                                        <ui:define name="label">
                                            <h:outputText id="orchestrableText"
                                                          value="#{messages['gazelle.tm.IsOrchestrable']}"/>
                                        </ui:define>
                                        <h:selectBooleanCheckbox styleClass="form-control-static" id="orchestrableid"
                                                                 value="#{testsDefinitionsAdministrationManager.selectedTest.orchestrable}">
                                        </h:selectBooleanCheckbox>
                                    </s:decorate>
                                </a4j:region>
                                <a4j:region id="validatedRegion" rendered="#{s:hasRole('admin_role')}">
                                    <s:decorate id="validatedDecoration" template="/layout/form/_edit.xhtml">
                                        <ui:param name="id" value="validatedid"/>
                                        <ui:define name="label">
                                            <h:outputText id="validatedText"
                                                          value="#{messages['net.ihe.gazelle.tm.IsValidated']}"/>
                                        </ui:define>
                                        <h:selectBooleanCheckbox styleClass="form-control-static" id="validatedid"
                                                                 value="#{testsDefinitionsAdministrationManager.selectedTest.validated}">
                                        </h:selectBooleanCheckbox>
                                    </s:decorate>
                                </a4j:region>
                                <a4j:region id="validatedByUserRegion"
                                            rendered="#{testsDefinitionsAdministrationManager.selectedTest.lastValidatorId != null}">
                                    <s:decorate id="validatedByUserDecoration"
                                                template="/layout/display/_display.xhtml">
                                        <ui:define name="label">#{messages['net.ihe.gazelle.tm.TestIsValidatedBy']}
                                        </ui:define>
                                        <h:outputText id="validatedByUser"
                                                      value="#{testsDefinitionsAdministrationManager.selectedTest.lastValidatorId}"/>
                                    </s:decorate>
                                </a4j:region>
                                <a4j:region id="editTestPermalinkRegion"
                                            rendered="#{testsDefinitionsAdministrationManager.selectedTest.id!=null}">
                                    <s:decorate id="editTestPermalinkDecoration"
                                                template="/layout/display/_display.xhtml">
                                        <ui:define name="label">
                                            <h:outputText
                                                    value="#{messages['gazelle.tm.testing.test.testPermalink']}"/>
                                        </ui:define>
                                        <h:outputLink id="editTestPermalink" target="_blank"
                                                      value="#{testsDefinitionsAdministrationManager.getTestPermalink(testsDefinitionsAdministrationManager.selectedTest)}">
                                            <h:outputText
                                                    value="#{testsDefinitionsAdministrationManager.getTestPermalink(testsDefinitionsAdministrationManager.selectedTest)}"/>
                                        </h:outputLink>
                                    </s:decorate>
                                </a4j:region>
                                <a4j:region id="versionRegion">
                                    <s:decorate id="versionDecoration" template="/layout/form/_edit.xhtml">
                                        <ui:param name="id" value="version"/>
                                        <ui:define name="label">
                                            <span title="#{messages['gazelle.tm.TheVersionOfTheTest']}">
                                            #{messages['gazelle.systems.system.SystemVersion']}
                                            </span>
                                        </ui:define>
                                        <h:inputText styleClass=" form-control" id="version" maxlength="60" size="60"
                                                     value="#{testsDefinitionsAdministrationManager.selectedTest.version}">
                                        </h:inputText>
                                    </s:decorate>
                                </a4j:region>
                            </ui:decorate>

                            <div align="right">
                                <a4j:commandButton id="testSummaryAddThisTestButton"
                                                   value="#{messages['gazelle.tm.AddThisTest']}"
                                                   actionListener="#{testsDefinitionsAdministrationManager.persistTest()}"
                                                   styleClass="gzl-btn-green"
                                                   rendered="#{testsDefinitionsAdministrationManager.selectedTest.id==null and s:hasPermission('TestsDefinitionsAdministrationManager', 'EditTest', null)}"
                                                   render="messageDecoration,AddTestPanel"/>
                                <a4j:commandButton id="updateThisTestButton"
                                                   value="#{messages['gazelle.tm.UpdateThisTest']}"
                                                   actionListener="#{testsDefinitionsAdministrationManager.persistTest()}"
                                                   styleClass="gzl-btn-orange"
                                                   rendered="#{testsDefinitionsAdministrationManager.selectedTest.id!=null and s:hasPermission('TestsDefinitionsAdministrationManager', 'EditTest', null)}"
                                                   render="messageDecoration,AddTestPanel"/>
                            </div>
                        </div>
                        <h:panelGroup
                                rendered="#{testsDefinitionsAdministrationManager.selectedTest.id != null and s:hasPermission('TestsDefinitionsAdministrationManager', 'EditTest', null)}">
                            <div role="tabpanel" class="tab-pane" id="editTestDescriptionsTab">
                                <s:div id="TestDescriptionsManagement"
                                       rendered="#{s:hasPermission('TestsDefinitionsAdministrationManager', 'EditTest', null)}">
                                    <rich:collapsiblePanel id="translatedTestDescriptionTogglePanel"
                                                           rendered="#{testsDefinitionsAdministrationManager.testDescriptionTranslationMode and testsDefinitionsAdministrationManager.translatedTestDescription!=null}"
                                                           label="#{testsDefinitionsAdministrationManager.translatedTestDescription.gazelleLanguage.keyword}"
                                                           switchType="client">
                                        <f:facet name="openMarker">
                                            <h:outputText value="#{messages['gazelle.tm.test.Open']}"/>
                                        </f:facet>
                                        <f:facet name="closeMarker">
                                            <h:outputText value="#{messages['gazelle.tm.test.Close']}"/>
                                        </f:facet>
                                        <s:div id="testDescriptionForTogglePanel"
                                               style="height:400px;overflow:auto;background-color:white;">
                                            <g:safehtml
                                                    value="#{testsDefinitionsAdministrationManager.translatedTestDescription.description}"/>
                                        </s:div>
                                    </rich:collapsiblePanel>
                                    <br/>
                                    <s:div rendered="#{(testsDefinitionsAdministrationManager.testDescriptionEditionMode or testsDefinitionsAdministrationManager.testDescriptionTranslationMode)}">

                                        <ui:decorate template="/layout/panels/_panel_title_id.xhtml">
                                            <ui:param name="panel_id" value="AddNewDescriptionPanel"/>
                                            <ui:define name="panel_title">#{messages['gazelle.tm.DescriptionEditor']}
                                            </ui:define>
                                            <a4j:region id="descriptionLanguageRegion">
                                                <s:decorate id="descriptionLanguageDecoration"
                                                            template="/layout/form/_edit.xhtml">
                                                    <ui:define name="label">
                                                        #{messages['gazelle.tm.DescriptionLanguage']}
                                                    </ui:define>
                                                    <h:selectOneMenu styleClass="form-control gzl-form-control"
                                                                     id="descriptionLanguageListBox"
                                                                     value="#{testsDefinitionsAdministrationManager.selectedTestDescription.gazelleLanguage}">
                                                        <s:selectItems
                                                                value="#{testsDefinitionsAdministrationManager.getLanguageList()}"
                                                                var="selectedLanguage" hideNoSelectionLabel="true"
                                                                label="#{selectedLanguage.keyword}"/>
                                                    </h:selectOneMenu>
                                                </s:decorate>
                                            </a4j:region>
                                            <a4j:region id="descriptionRegion">
                                                <s:decorate id="descriptionDecoration"
                                                            template="/layout/form/_edit.xhtml">
                                                    <ui:define name="label">#{messages['gazelle.tf.table.Description']}
                                                    </ui:define>
                                                    <ui:decorate template="/layout/editor/_text_editor.xhtml">
                                                        <ui:param name="text"
                                                                  value="#{testsDefinitionsAdministrationManager.selectedTestDescription.description}"/>
                                                        <ui:param name="id" value="TestDescriptionEditor"/>
                                                        <ui:param name="isFocus" value="true"/>
                                                    </ui:decorate>
                                                </s:decorate>
                                            </a4j:region>
                                        </ui:decorate>

                                        <div align="right">
                                            <a4j:commandButton value="#{messages['gazelle.tm.AddThisDescription']}"
                                                               id="adddesctotest"
                                                               actionListener="#{testsDefinitionsAdministrationManager.addTestDescription()}"
                                                               styleClass="gzl-btn"
                                                               rendered="#{testsDefinitionsAdministrationManager.selectedTestDescription.id == null}"
                                                               render="TestDescriptionsManagement"/>
                                            <a4j:commandButton value="#{messages['gazelle.tm.UpdateThisDescription']}"
                                                               id="updatetestdesc"
                                                               actionListener="#{testsDefinitionsAdministrationManager.addTestDescription()}"
                                                               styleClass="gzl-btn"
                                                               rendered="#{testsDefinitionsAdministrationManager.selectedTestDescription.id != null}"
                                                               render="TestDescriptionsManagement"/>
                                        </div>
                                    </s:div>
                                    <s:div rendered="#{!testsDefinitionsAdministrationManager.testDescriptionEditionMode and !testsDefinitionsAdministrationManager.testDescriptionTranslationMode}">
                                        <a4j:repeat
                                                value="#{testsDefinitionsAdministrationManager.selectedTest.testDescription}"
                                                var="selectedDescription">
                                            <rich:collapsiblePanel id="TestDescriptionTogglePanel" opened="false"
                                                                   label="#{selectedDescription.gazelleLanguage.keyword}"
                                                                   rendered="#{selectedDescription != null}"
                                                                   switchType="client">
                                                <f:facet name="openMarker">
                                                    <h:outputText value="#{messages['gazelle.tm.test.Open']}"/>
                                                </f:facet>
                                                <f:facet name="closeMarker">
                                                    <h:outputText value="#{messages['gazelle.tm.test.Close']}"/>
                                                </f:facet>
                                                <div>
                                                    <s:div id="testDescriptionForTogglePanel"
                                                           style="height:400px;overflow:auto;background-color:white;">
                                                        <g:safehtml value="#{selectedDescription.description}"/>
                                                    </s:div>
                                                    <a4j:commandButton styleClass="gzl-btn-blue"
                                                                       value="#{messages['gazelle.common.button.Edit']}"
                                                                       actionListener="#{testsDefinitionsAdministrationManager.editTestDescription(selectedDescription)}"
                                                                       execute="@this"
                                                                       render="TestDescriptionsManagement"/>
                                                    <a4j:commandButton styleClass="gzl-btn"
                                                                       value="#{messages['gazelle.common.button.Translate']}"
                                                                       actionListener="#{testsDefinitionsAdministrationManager.translateTestDescription(selectedDescription)}"
                                                                       execute="@this"
                                                                       render="TestDescriptionsManagement"/>
                                                    <a4j:commandButton styleClass="gzl-btn-red"
                                                                       value="#{messages['gazelle.common.button.Delete']}"
                                                                       id="deleteDescriptionCommandButton"
                                                                       actionListener="#{testsDefinitionsAdministrationManager.setSelectedTestDescription(selectedDescription)}"
                                                                       oncomplete="jq162('#DescriptionDeleteConfirmationModalPanel').modal('show');"
                                                                       execute="@this"
                                                                       render="DescriptionDeleteConfirmationDiv">
                                                    </a4j:commandButton>
                                                </div>
                                            </rich:collapsiblePanel>
                                            <br/></a4j:repeat>
                                        <rich:dataTable id="descriptionListTable" var="selectedDescription"
                                                        rendered="false"
                                                        rowKeyVar="DescriptionListRowNumber"
                                                        value="#{testsDefinitionsAdministrationManager.selectedTest.testDescription}"


                                                        first="0" rows="#{dataScrollerMemory.numberOfResultsPerPage}">
                                            <f:facet name="header">
                                                <rich:columnGroup>
                                                    <g:column>
                                                        <h:outputText value="#{messages['gazelle.tm.Language']}"/>
                                                    </g:column>
                                                    <g:column>
                                                        <h:outputText
                                                                value="#{messages['gazelle.tf.table.Description']}"/>
                                                    </g:column>
                                                    <g:column>
                                                        <h:outputText
                                                                value="#{messages['gazelle.common.Action']}"/>
                                                    </g:column>
                                                </rich:columnGroup>
                                            </f:facet>
                                            <g:column
                                                    styleClass="#{styleClassColumn}">
                                                <h:outputText id="testDescriptionLanguageOutputText"
                                                              value="#{selectedDescription.gazelleLanguage.keyword}"
                                                />
                                            </g:column>
                                            <g:column styleClass="#{styleClassColumn}">
                                                <h:panelGroup
                                                        rendered="#{selectedDescription.description.length()&gt;1000}">
                                                    <ui:decorate template="/layout/panels/_panel_title_id.xhtml">
                                                        <ui:param name="panel_id" value="testDescriptionMainPanel"/>
                                                        <g:safehtml value="#{selectedDescription.description}"/>
                                                    </ui:decorate>
                                                </h:panelGroup>
                                                <h:panelGroup
                                                        rendered="#{selectedDescription.description.length() &lt; 1000}">
                                                    <ui:decorate template="/layout/panels/_panel_title_id.xhtml">
                                                        <ui:param name="panel_id" value="testDescriptionPanel"/>
                                                        <g:safehtml value="#{selectedDescription.description}"/>
                                                    </ui:decorate>
                                                </h:panelGroup>
                                            </g:column>
                                            <g:column>
                                                <h:panelGrid id="DescriptionActionGridGlobal" columns="30">
                                                    <h:panelGroup rendered="#{identity.loggedIn}">

                                                        <a4j:commandLink id="editTestDescriptionSupport"
                                                                         actionListener="#{testsDefinitionsAdministrationManager.editTestDescription(selectedDescription)}"
                                                                         onRowMouseOver="this.style.cursor='pointer'"
                                                                         render="TestDescriptionsManagement">
                                                            <span class="gzl-icon-pencil"/>
                                                        </a4j:commandLink>
                                                    </h:panelGroup>


                                                    <a4j:commandLink id="setTestDescriptionSupport"
                                                                     actionListener="#{testsDefinitionsAdministrationManager.setSelectedTestDescription(selectedDescription)}"
                                                                     oncomplete="jq162('#DescriptionDeleteConfirmationModalPanel').modal('show');"
                                                                     render="DescriptionDeleteConfirmationDiv">
                                                        <span class="gzl-icon-trash-o"/>
                                                    </a4j:commandLink>

                                                </h:panelGrid>
                                            </g:column>
                                            <f:facet name="footer">
                                                <ui:include src="/util/datatableFooter.xhtml">
                                                    <ui:param name="dataTableId" value="descriptionListTable"/>
                                                </ui:include>
                                            </f:facet>
                                        </rich:dataTable>
                                    </s:div>
                                    <ui:decorate template="/layout/popup/_popup_title_footer.xhtml">
                                        <ui:param name="popup_id" value="DescriptionDeleteConfirmationModalPanel"/>
                                        <ui:define name="popup_title">#{messages['gazelle.tm.DeleteDescription']}
                                        </ui:define>
                                        <s:div id="DescriptionDeleteConfirmationDiv">
                                            <p>#{messages['gazelle.tm.DeleteDescription_2']}</p>
                                        </s:div>
                                        <ui:define name="popup_footer">
                                            <button type="button" class="gzl-btn" data-dismiss="modal">
                                                #{messages['gazelle.tm.Cancel']}
                                            </button>
                                            <a4j:commandButton id="DescriptionDeleteConfirmationPanelButton"
                                                               value="#{messages['gazelle.common.button.Delete']}"
                                                               styleClass="gzl-btn-red"
                                                               ignoreDupResponses="true"
                                                               actionListener="#{testsDefinitionsAdministrationManager.deleteSelectedDescription()}"
                                                               onclick="jq162('#DescriptionDeleteConfirmationModalPanel').modal('hide');"
                                                               render="TestDescriptionsManagement"/>

                                        </ui:define>
                                    </ui:decorate>
                                </s:div>
                            </div>
                        </h:panelGroup>
                        <div role="tabpanel" class="tab-pane" id="editTestRolesTab">
                            <ui:decorate template="/layout/panels/_panel_title_id.xhtml">
                                <ui:param name="panel_id" value="displayRoles"/>
                                <ui:define name="panel_title">#{messages['gazelle.tm.roleInTest.Roles']}</ui:define>
                                <s:div id="tableOfTestRolesDiv">
                                    <rich:dataTable border="0" id="tableOfTestRolesWithAction" var="currentTestRoles"
                                                    rowClasses="ti-row1, ti-row2"
                                                    value="#{testsDefinitionsAdministrationManager.listOfTestRoles}">
                                        <g:column>
                                            <ui:define name="header">
                                                <h:outputText
                                                        value="#{messages['gazelle.testmanagement.object.keyword']}"/>
                                            </ui:define>
                                            <h:outputText value="#{currentTestRoles.roleInTest.keyword}"/>
                                            <ui:decorate template="/layout/popover/_popover_on_icon.xhtml">
                                                <ui:param name="id" value="part#{selectedTestRoles.id}"/>
                                                <ui:param name="placement" value="bottom"/>
                                                <ui:param name="icon_class" value="gzl-icon-question-circle"/>
                                                <ui:define name="content">
                                                    <s:div>
                                                        <h:outputText
                                                                value="#{messages['gazelle.tm.test.NoParticipantsForThisRole']}"
                                                                rendered="#{currentTestRoles.roleInTest.testParticipantsList.size()==0 }"/>
                                                    </s:div>
                                                    <div style="max-height: 300px; overflow: auto;">
                                                        <rich:dataTable id="roleInTestTable" cellpadding="0"
                                                                        cellspacing="0"
                                                                        width="700" border="0"
                                                                        var="currentTestParticipant"
                                                                        value="#{currentTestRoles.roleInTest.testParticipantsList}"
                                                                        rendered="#{currentTestRoles.roleInTest.testParticipantsList.size()!=0 }"
                                                                        first="0">
                                                            <f:facet name="header">
                                                                <rich:columnGroup>
                                                                    <g:column>
                                                                        <h:outputText
                                                                                value="#{messages['gazelle.testmanagement.system.label.IP']}"/>
                                                                    </g:column>
                                                                    <g:column>
                                                                        <h:outputText
                                                                                value="#{messages['gazelle.configuration.system.actorKeyword']}"/>
                                                                    </g:column>
                                                                    <g:column>
                                                                        <h:outputText
                                                                                value="#{messages['gazelle.tests.test.option']}"/>
                                                                    </g:column>
                                                                    <g:column>
                                                                        <h:outputText
                                                                                value="#{messages['gazelle.tm.test.IsTested']}"/>
                                                                    </g:column>
                                                                </rich:columnGroup>
                                                            </f:facet>
                                                            <g:column>
                                                                <h:outputText
                                                                        value="#{currentTestParticipant.actorIntegrationProfileOption.actorIntegrationProfile.integrationProfile.toString()}">
                                                                </h:outputText>
                                                            </g:column>
                                                            <g:column>
                                                                <h:outputText
                                                                        value="#{currentTestParticipant.actorIntegrationProfileOption.actorIntegrationProfile.actor.toString()}"/>
                                                            </g:column>
                                                            <g:column>
                                                                <h:outputText
                                                                        value="#{currentTestParticipant.actorIntegrationProfileOption.integrationProfileOption.keyword}"/>
                                                            </g:column>
                                                            <g:column>
                                                                <h:outputText
                                                                        value="#{currentTestParticipant.tested}"/>
                                                            </g:column>
                                                        </rich:dataTable>
                                                    </div>
                                                </ui:define>
                                            </ui:decorate>
                                        </g:column>
                                        <g:column>
                                            <ui:define name="header">
                                                <h:outputText
                                                        value="# #{messages['gazelle.tm.roleInTest.toRealize']}"/>
                                            </ui:define>
                                            <h:outputText id="numToRealize"
                                                          value="#{currentTestRoles.numberOfTestsToRealize}"/>
                                        </g:column>
                                        <g:column>
                                            <ui:define name="header">
                                                <h:outputText value="#{messages['gazelle.tm.CardMin']}"/>
                                            </ui:define>
                                            <h:outputText id="cardMin" value="#{currentTestRoles.cardMin}"/>
                                        </g:column>
                                        <g:column>
                                            <ui:define name="header">
                                                <h:outputText value="#{messages['gazelle.tm.CardMax']}"/>
                                            </ui:define>
                                            <h:outputText id="cardMax" value="#{currentTestRoles.cardMax}"/>
                                        </g:column>
                                        <g:column>
                                            <ui:define name="header">
                                                <h:outputText
                                                        value="#{messages['gazelle.tf.table.Optionality']}"/>
                                            </ui:define>
                                            <h:outputText id="option"
                                                          value="#{currentTestRoles.testOption.labelToDisplay}"/>
                                        </g:column>
                                        <g:column>
                                            <ui:define name="header">
                                                <h:outputText value="#{messages['gazelle.tm.testing.URL']}"/>
                                            </ui:define>
                                            <s:div rendered="#{ not empty currentTestRoles.url}">
                                                <a href="#{currentTestRoles.url}" target="_blank"
                                                   title="#{messages['gazelle.tm.GoTo']} : #{currentTestRoles.url}">
                                                    <span class="gzl-icon-globe"/>
                                                </a>
                                            </s:div>
                                        </g:column>
                                        <g:column>
                                            <ui:define name="header">
                                                <h:outputText value="#{messages['gazelle.tm.URLDoc']}"/>
                                            </ui:define>
                                            <s:div rendered="#{ not empty currentTestRoles.urlDocumentation}">
                                                <a href="#{currentTestRoles.urlDocumentation}" target="_blank"
                                                   title="#{messages['gazelle.tm.GoTo']} : #{currentTestRoles.urlDocumentation}">
                                                    <span class="gzl-icon-globe"/>
                                                </a>
                                            </s:div>
                                        </g:column>
                                        <g:column>
                                            <ui:define name="header">
                                                <h:outputText
                                                        value="#{messages['gazelle.testmanagement.object.Action']}"/>
                                            </ui:define>
                                            <a4j:commandLink event="click" execute="@this"
                                                             render="addNewRow,spinnerScript"
                                                             title="#{messages['gazelle.common.button.Edit']}"
                                                             actionListener="#{testsDefinitionsAdministrationManager.setSelectedTestRoles(currentTestRoles)}">
                                                <span class="gzl-icon-pencil"/>
                                            </a4j:commandLink>

                                            <a4j:commandLink event="click"
                                                             title="#{messages['gazelle.common.button.Delete']}"
                                                             oncomplete="jq162('#testRoleDeleteModalPanel').modal('show');"
                                                             execute="@this"
                                                             render=" :testRoleDeleteForm"
                                                             actionListener="#{testsDefinitionsAdministrationManager.setSelectedTestRoles(currentTestRoles)}">
                                                <span class="gzl-icon-trash-o"/>
                                            </a4j:commandLink>


                                        </g:column>
                                    </rich:dataTable>
                                    <a4j:commandButton value="#{messages['gazelle.tm.patient.addAuthority']}"
                                                       styleClass="gzl-btn"
                                                       actionListener="#{testsDefinitionsAdministrationManager.addTestRoles()}"
                                                       render="addNewRow,spinnerScript"/>
                                </s:div>

                                <s:div id="addNewRow">
                                    <h:panelGroup
                                            rendered="#{testsDefinitionsAdministrationManager.selectedTestRoles != null}">

                                        <ui:decorate template="/layout/panels/_panel_title.xhtml">
                                            <ui:define name="panel_title">
                                                <h:outputText id="modeCreate"
                                                              value="#{messages['gazelle.tm.AddARoleForTest']} #{testsDefinitionsAdministrationManager.selectedTest.keyword}"
                                                              rendered="#{testsDefinitionsAdministrationManager.selectedTestRoles.id == null}"/>
                                                <h:outputText id="modeUpdate"
                                                              value="#{messages['gazelle.tm.EditingRole']} #{testsDefinitionsAdministrationManager.roleInTestKeywordTyped} #{messages['gazelle.tm.monitors.ForTest']} #{testsDefinitionsAdministrationManager.selectedTest.keyword}"
                                                              rendered="#{testsDefinitionsAdministrationManager.selectedTestRoles.id != null}"/>
                                            </ui:define>
                                            <h:panelGroup
                                                    rendered="#{testsDefinitionsAdministrationManager.selectedTestRoles.roleInTest == null}">
                                                <s:div id="roleInTestSelector">
                                                    <ui:decorate template="/layout/panels/_panel_filter_criteria.xhtml">
                                                        <!--  AIPO selection -->
                                                        <ui:include src="/testing/research/filterAIPO.xhtml">
                                                            <ui:param name="filter"
                                                                      value="#{testsDefinitionsAdministrationManager.foundRoleInTests.filter}"/>
                                                            <ui:param name="filterForm"
                                                                      value="roleInTestSelector"/>
                                                        </ui:include>
                                                        <div class="row">
                                                            <div class="col-lg-6">
                                                                <div class="form-group">
                                                                    <label class="col-sm-4 control-label">
                                                                        <h:outputText id="searchTextName"
                                                                                      value="#{messages['net.ihe.gazelle.tm.ByKeywordOrName']}"/>
                                                                    </label>

                                                                    <div class="col-sm-5">
                                                                        <span class="gzl-never-wrap">
                                                                            <h:inputText styleClass=" form-control"
                                                                                         id="inputTextFind"
                                                                                         value="#{testsDefinitionsAdministrationManager.roleInTestKeywordTyped}"/>
                                                                            <rich:hotKey key="return"
                                                                                         onkeydown="#{rich:element('sumbitFindTextImage')}.click()"
                                                                                         selector="#inputTextFind"/>
                                                                            <a4j:commandLink id="sumbitFindTextImage"
                                                                                             event="click"
                                                                                             render="roleInTestSelector,spinnerScript"
                                                                                             title="#{messages['gazelle.common.button.Search']}">
                                                                                <span class="gzl-icon-search"/>
                                                                            </a4j:commandLink>
                                                                        </span>
                                                                    </div>
                                                                </div>
                                                            </div>
                                                        </div>
                                                        <ui:define name="filter_buttons">
                                                            <a4j:commandLink
                                                                    actionListener="#{testsDefinitionsAdministrationManager.resetFilterRoleInTests()}"
                                                                    title="#{messages['gazelle.users.reset']}"
                                                                    type="submit" oncomplete="colorRowsOfTable();"
                                                                    execute="@this"
                                                                    render="roleInTestSelector,spinnerScript">
                                                                <span class="fa fa-times-circle"/>
                                                            </a4j:commandLink>
                                                        </ui:define>
                                                    </ui:decorate>
                                                    <rich:dataTable id="roleInTestTableSelect" cellpadding="0"
                                                                    cellspacing="0"
                                                                    rows="6" border="0" var="currentRoleInTest"
                                                                    value="#{testsDefinitionsAdministrationManager.foundRoleInTests}">
                                                        <f:facet name="header">
                                                            <rich:columnGroup>
                                                                <g:column rowspan="2">
                                                                    <h:outputText
                                                                            value="#{messages['gazelle.tm.roleInTest.RoleInTestKeyword']}"/>
                                                                </g:column>
                                                                <g:column colspan="4">
                                                                    <h:outputText
                                                                            value="#{messages['gazelle.tm.monitors.TestParticipants']}"/>
                                                                </g:column>
                                                                <g:column breakRowBefore="true">
                                                                    <h:outputText
                                                                            value="#{messages['gazelle.testmanagement.system.label.IP']}"/>
                                                                </g:column>
                                                                <g:column>
                                                                    <h:outputText
                                                                            value="#{messages['gazelle.configuration.system.actorKeyword']}"/>
                                                                </g:column>
                                                                <g:column>
                                                                    <h:outputText
                                                                            value="#{messages['gazelle.tests.test.option']}"/>
                                                                </g:column>
                                                                <g:column>
                                                                    <h:outputText
                                                                            value="#{messages['gazelle.tm.roleInTest.IsTested']}"/>
                                                                </g:column>
                                                            </rich:columnGroup>
                                                        </f:facet>
                                                        <g:column colspan="5">
                                                            <h:outputText value="#{currentRoleInTest.keyword}"
                                                                          style="font-size:small;font-weight:bold;"/>
                                                        </g:column>
                                                        <g:column breakRowBefore="true" colspan="5">
                                                            <s:div style="text-align:right">
                                                                <a4j:commandButton id="selectbestrit"
                                                                                   actionListener="#{testsDefinitionsAdministrationManager.selectRoleInTestAndUpdateKeyword(currentRoleInTest)}"
                                                                                   value="#{messages['gazelle.common.Select']}"
                                                                                   render="addNewRow,globalMessageDiv,spinnerScript"
                                                                                   execute="@this"/>
                                                            </s:div>
                                                        </g:column>
                                                        <rich:collapsibleSubTable var="testParticipant"
                                                                                  value="#{currentRoleInTest.testParticipantsList}">
                                                            <g:column>

                                                                <f:facet name="footer">
                                                                    <h:outputText
                                                                            value="#{currentRoleInTest.testParticipantsList.size} #{messages['gazelle.tm.monitors.TestParticipants']}"
                                                                            style="font-size:x-small;font-style:italic;"/>
                                                                </f:facet>
                                                            </g:column>
                                                            <g:column>
                                                                <h:outputText
                                                                        value="#{testParticipant.actorIntegrationProfileOption.actorIntegrationProfile.integrationProfile.toString()}">
                                                                </h:outputText>
                                                            </g:column>
                                                            <g:column>
                                                                <h:outputText
                                                                        value="#{testParticipant.actorIntegrationProfileOption.actorIntegrationProfile.actor.toString()}"/>
                                                            </g:column>
                                                            <g:column>
                                                                <h:outputText
                                                                        value="#{testParticipant.actorIntegrationProfileOption.integrationProfileOption.keyword}"/>
                                                            </g:column>
                                                            <g:column>
                                                                <h:outputText value="#{testParticipant.tested}"/>
                                                            </g:column>
                                                        </rich:collapsibleSubTable>
                                                        <f:facet name="footer">
                                                            <rich:dataScroller maxPages="10"
                                                                               renderIfSinglePage="false"/>
                                                        </f:facet>
                                                    </rich:dataTable>
                                                </s:div>
                                            </h:panelGroup>
                                            <h:panelGroup
                                                    rendered="#{testsDefinitionsAdministrationManager.selectedTestRoles.roleInTest != null}">
                                                <s:decorate template="/layout/form/_edit.xhtml">
                                                    <ui:define name="label">
                                                        #{messages['gazelle.testmanagement.object.keyword']}
                                                    </ui:define>
                                                    <h:outputText
                                                            value="#{testsDefinitionsAdministrationManager.selectedTestRoles.roleInTest.keyword}"/>
                                                </s:decorate>
                                                <s:decorate template="/layout/form/_edit.xhtml">
                                                    <ui:param name="id" value="roleInTestNumberToRealizeInputText"/>
                                                    <ui:define name="label">
                                                        ##{messages['gazelle.tm.roleInTest.toRealize']}
                                                    </ui:define>
                                                    <rich:inputNumberSpinner id="roleInTestNumberToRealizeInputText"
                                                                             value="#{testsDefinitionsAdministrationManager.selectedTestRoles.numberOfTestsToRealize}"
                                                                             minValue="1"/>
                                                </s:decorate>
                                                <s:decorate template="/layout/form/_edit.xhtml">
                                                    <ui:param name="id" value="roleInTestCardMinInputText"/>
                                                    <ui:define name="label">#{messages['gazelle.tm.test.CardMin']}
                                                    </ui:define>
                                                    <rich:inputNumberSpinner id="roleInTestCardMinInputText"
                                                                             value="#{testsDefinitionsAdministrationManager.selectedTestRoles.cardMin}"
                                                                             minValue="0"/>
                                                </s:decorate>
                                                <s:decorate template="/layout/form/_edit.xhtml">
                                                    <ui:param name="id" value="roleInTestCardMaxInputText"/>
                                                    <ui:define name="label">#{messages['gazelle.tm.test.CardMax']}
                                                    </ui:define>
                                                    <rich:inputNumberSpinner id="roleInTestCardMaxInputText"
                                                                             value="#{testsDefinitionsAdministrationManager.selectedTestRoles.cardMax}"
                                                                             minValue="0"/>
                                                </s:decorate>
                                                <s:decorate template="/layout/form/_edit.xhtml">
                                                    <ui:define name="label">#{messages['gazelle.tf.table.Optionality']}
                                                    </ui:define>
                                                    <h:selectOneMenu styleClass="form-control gzl-form-control"
                                                                     id="optionsList"
                                                                     value="#{testsDefinitionsAdministrationManager.selectedTestRoles.testOption}">
                                                        <s:selectItems value="#{gazelleDAO.listTestOptions()}"
                                                                       var="optionFromList"
                                                                       noSelectionLabel="#{messages['gazelle.common.PleaseSelect']}"
                                                                       label="#{optionFromList.labelToDisplay}"/>
                                                    </h:selectOneMenu>
                                                </s:decorate>
                                                <s:decorate id="urlDecoration" template="/layout/form/_edit.xhtml">
                                                    <ui:param name="id" value="url"/>
                                                    <ui:define name="label">
                                                        <span title="#{messages['gazelle.tm.ALinkToTheTestDescription']}">
                                                        #{messages['gazelle.tm.testing.URL']}
                                                        </span>
                                                    </ui:define>
                                                    <h:inputText styleClass=" form-control" id="url" maxlength="250"
                                                                 size="60"
                                                                 value="#{testsDefinitionsAdministrationManager.selectedTestRoles.url}">
                                                        <a4j:ajax event="blur" execute="@this"
                                                                  render="urlDecoration"/>
                                                    </h:inputText>
                                                </s:decorate>
                                                <s:decorate id="urlDocumentationDecoration"
                                                            template="/layout/form/_edit.xhtml">
                                                    <ui:param name="id" value="urlDocumentation"/>
                                                    <ui:define name="label">
                                                        <span title="#{messages['gazelle.tm.ALinkToTheTestDocumentation']}">
                                                            #{messages['gazelle.tm.URLDocumentation']}
                                                        </span>
                                                    </ui:define>
                                                    <h:inputText styleClass=" form-control" id="urlDocumentation"
                                                                 maxlength="250" size="60"
                                                                 value="#{testsDefinitionsAdministrationManager.selectedTestRoles.urlDocumentation}">
                                                        <a4j:ajax event="blur" execute="@this"
                                                                  render="urlDocumentationDecoration"/>
                                                    </h:inputText>
                                                </s:decorate>
                                                <a4j:commandButton
                                                        value="#{messages['gazelle.tm.patient.addAuthority']}"
                                                        styleClass="gzl-btn"
                                                        actionListener="#{testsDefinitionsAdministrationManager.updateTestRoles()}"
                                                        rendered="#{testsDefinitionsAdministrationManager.selectedTestRoles.id == null}"
                                                        render="displayRoles,globalMessageDiv"/>
                                                <a4j:commandButton
                                                        value="#{messages['gazelle.testmanagement.object.Update']}"
                                                        styleClass="gzl-btn-orange"
                                                        actionListener="#{testsDefinitionsAdministrationManager.updateTestRoles()}"
                                                        rendered="#{testsDefinitionsAdministrationManager.selectedTestRoles.id != null}"
                                                        render="displayRoles,globalMessageDiv"/>
                                            </h:panelGroup>
                                            <a4j:commandButton
                                                    value="#{messages['gazelle.tm.roleInTest.CancelEditing']}"
                                                    styleClass="gzl-btn"
                                                    actionListener="#{testsDefinitionsAdministrationManager.cancelEditingTestRoles()}"
                                                    render="displayRoles" execute="@this"/>
                                        </ui:decorate>
                                    </h:panelGroup>
                                </s:div>
                            </ui:decorate>
                        </div>
                        <h:panelGroup
                                rendered="#{testsDefinitionsAdministrationManager.selectedTest.id != null and s:hasPermission('TestsDefinitionsAdministrationManager', 'EditTest', null)}">
                            <div role="tabpanel" class="tab-pane" id="editTestStepsTab">
                                <s:div id="editTestStepsDiv">
                                    #{testsDefinitionsAdministrationManager.setShowTestStepsEditionPanel(false)}

                                    <s:div id="testStepsManagement"><!-- =================================== --><!-- Test Sequence Diagram section		 --><!-- =================================== -->
                                        <h:panelGroup
                                                rendered="#{!testsDefinitionsAdministrationManager.showTestStepsEditionPanel and s:hasPermission('TestsDefinitionsAdministrationManager', 'EditTest', null)}">
                                            <ui:decorate template="/layout/panels/_panel_title.xhtml">
                                                <ui:define name="panel_title">#{messages['gazelle.tm.TestSummary']}
                                                </ui:define>
                                                <h:graphicImage library="img"
                                                                value="#{editTestDefinitionManager.getEditedTest().sequenceDiagramAsUrl}"
                                                                title="#{messages['gazelle.tm.SequenceDiagram']}"/>

                                            </ui:decorate>
                                            <ui:decorate template="/layout/panels/_panel_title_id.xhtml">
                                                <ui:param name="panel_id" value="testStepsPanel"/>
                                                <ui:define name="panel_title">#{messages['gazelle.tm.TestSteps']}
                                                </ui:define>
                                                <rich:dataTable id="testStepsTable" var="currentTestStep"
                                                                rowKeyVar="rowNumber"
                                                                value="#{testsDefinitionsAdministrationManager.listOfTestSteps}"
                                                                first="0" columnClasses="center">
                                                    <g:column styleClass="#{styleClassColumn}"
                                                              sortOrder="ascending" sortBy="#{'stepIndex'}"
                                                              rowspan="3">
                                                        <ui:define name="header">
                                                            <h:outputText id="stepIndexHeaderOutputText"
                                                                          value="#{messages['gazelle.tm.StepIndex']}"/>
                                                        </ui:define>
                                                        <a4j:commandLink id="testStepSupport"
                                                                         onsubmit="this.parentNode.childNodes[1].style.display='block';"
                                                                         oncomplete="this.parentNode.childNodes[1].style.display='none';"
                                                                         actionListener="#{testsDefinitionsAdministrationManager.persistTestSteps(currentTestStep)}"
                                                                         render="testStepsPanel" execute="@this"/>
                                                        <h:inputText id="testStepInputText"
                                                                     value="#{currentTestStep.stepIndex}"
                                                                     rendered="#{s:hasPermission('TestsDefinitionsAdministrationManager', 'EditTest', null)}"/>

                                                    </g:column>
                                                    <g:column styleClass="#{styleClassColumn}">
                                                        <ui:define name="header">
                                                            <h:outputText id="initiatorRoleHeaderOutputText"
                                                                          value="#{messages['gazelle.tm.InitiatorRole']}"/>
                                                        </ui:define>
                                                        <h:outputText id="initiatorRoleOutputText"
                                                                      value="#{currentTestStep.testRolesInitiator.roleInTest.keyword}"
                                                        />
                                                    </g:column>
                                                    <g:column styleClass="#{styleClassColumn}">
                                                        <ui:define name="header">
                                                            <h:outputText id="responderRoleHeaderOutputText"
                                                                          value="#{messages['gazelle.tm.ResponderRole']}"/>
                                                        </ui:define>
                                                        <h:outputText id="responderRoleOutputText"
                                                                      value="#{currentTestStep.testRolesResponder.roleInTest.keyword}"
                                                        />
                                                    </g:column>
                                                    <g:column styleClass="#{styleClassColumn}">
                                                        <ui:define name="header">
                                                            <h:outputText id="transactionHeaderOutputText"
                                                                          value="#{messages['gazelle.tf.Transaction']}"/>
                                                        </ui:define>
                                                        <h:outputText id="transactionOutputText"
                                                                      value="#{currentTestStep.transaction.keyword}"
                                                        />
                                                    </g:column>
                                                    <g:column styleClass="#{styleClassColumn}">
                                                        <ui:define name="header">
                                                            <h:outputText id="autoCompleteColumnHeaderText"
                                                                          value="#{messages['gazelle.tm.testdefinitions.AutoComplete']}"/>
                                                        </ui:define>
                                                        <h:selectBooleanCheckbox styleClass="form-control-static"
                                                                                 id="autoCompleteIndicator"
                                                                                 value="#{currentTestStep.autoComplete}">
                                                            <a4j:ajax event="change"
                                                                      render="testStepsPanel"
                                                                      listener="#{testsDefinitionsAdministrationManager.persistTestSteps(currentTestStep)}"/>
                                                        </h:selectBooleanCheckbox>
                                                    </g:column>
                                                    <g:column styleClass="#{styleClassColumn}">
                                                        <ui:define name="header">
                                                            <h:outputText id="autoTriggerColumnHeaderText"
                                                                          value="#{messages['gazelle.tm.testdefinitions.AutoTrigger']}"/>
                                                        </ui:define>
                                                        <h:selectBooleanCheckbox styleClass="form-control-static"
                                                                                 id="autoTriggerIndicator"
                                                                                 value="#{currentTestStep.autoTriggered}">
                                                            <a4j:ajax event="change"
                                                                      render="testStepsPanel"
                                                                      listener="#{testsDefinitionsAdministrationManager.persistTestSteps(currentTestStep)}"/>
                                                        </h:selectBooleanCheckbox>
                                                    </g:column>
                                                    <g:column styleClass="#{styleClassColumn}"
                                                              sortOrder="ascending" sortBy="#{'messageType'}">
                                                        <ui:define name="header">
                                                            <h:outputText id="initiatorMessageTypeHeaderOutputText"
                                                                          value="#{messages['gazelle.tm.testdefinitions.InitiatorMessageType']}"/>
                                                        </ui:define>
                                                        <h:outputText
                                                                value="#{currentTestStep.messageType}"/>
                                                    </g:column>
                                                    <g:column
                                                            styleClass="#{styleClassColumn}"
                                                            sortOrder="ascending"
                                                            sortBy="#{'responderMessageType'}">
                                                        <ui:define name="header">
                                                            <h:outputText id="responderMessageTypeOutputText"
                                                                          value="#{messages['gazelle.tm.testdefinitions.ResponderMessageType']}"/>
                                                        </ui:define>
                                                        <h:outputText id="responderMessageTypeInputText"
                                                                      value="#{currentTestStep.responderMessageType}"
                                                        />
                                                    </g:column>
                                                    <g:column
                                                            styleClass="#{styleClassColumn}">
                                                        <ui:define name="header">
                                                            <h:outputText id="testStepOptionHeaderOutputText"
                                                                          value="#{messages['gazelle.tf.LabelOption']}"/>
                                                        </ui:define>
                                                        <h:selectOneMenu styleClass="form-control gzl-form-control"
                                                                         id="testStepsOptionListBox"
                                                                         value="#{currentTestStep.testStepsOption}"
                                                                         style="font-weight:bold;text-align:center;"
                                                                         rendered="#{s:hasPermission('TestsDefinitionsAdministrationManager', 'EditTest', null)}">
                                                            <s:selectItems id="testStepOptionSelectItems"
                                                                           value="#{testsDefinitionsAdministrationManager.possibleTestStepsOptions}"
                                                                           var="selectedTestStepsOption"
                                                                           noSelectionLabel="#{messages['gazelle.common.PleaseSelect']}"
                                                                           label="#{selectedTestStepsOption.labelToDisplay}"/>
                                                            <a4j:ajax event="change"
                                                                      render="testStepsPanel"
                                                                      listener="#{testsDefinitionsAdministrationManager.persistTestSteps(currentTestStep)}"/>
                                                        </h:selectOneMenu>
                                                    </g:column>
                                                    <g:column
                                                            styleClass="#{styleClassColumn}">
                                                        <ui:define name="header">
                                                            <h:outputText id="testStepDescriptionHeaderOutputText"
                                                                          value="#{messages['gazelle.tf.table.Description']}"/>
                                                        </ui:define>
                                                        <h:inputTextarea styleClass=" form-control"
                                                                         id="testStepDescriptionInputTextarea" rows="3"
                                                                         cols="50"
                                                                         value="#{currentTestStep.description}"
                                                                         rendered="#{s:hasPermission('TestsDefinitionsAdministrationManager', 'EditTest', null)}">
                                                            <a4j:ajax event="change"
                                                                      render="testStepsManagement"
                                                                      listener="#{testsDefinitionsAdministrationManager.persistTestSteps(currentTestStep)}"/>
                                                        </h:inputTextarea>
                                                    </g:column>
                                                    <g:column rowspan="2">
                                                        <ui:define name="header">
                                                            <h:outputText id="testStepActionHeaderOutputText"
                                                                          value="#{messages['gazelle.common.Action']}"/>
                                                        </ui:define>
                                                        <h:panelGrid id="actionGridGlobal" columns="3">
                                                            <a4j:commandLink id="testStepsCopySupport"
                                                                             actionListener="#{testsDefinitionsAdministrationManager.copySelectedTestStep(currentTestStep)}"
                                                                             onRowMouseOver="this.style.cursor='pointer'"
                                                                             render="testStepsPanel"
                                                                             title="#{messages['gazelle.common.button.Copy']}"
                                                                             execute="@this">
                                                                <span class="gzl-icon-files-o"/>
                                                            </a4j:commandLink>
                                                            <a4j:commandLink id="testStepsEditSupport"
                                                                             title="#{messages['gazelle.common.button.Edit']}"
                                                                             actionListener="#{testsDefinitionsAdministrationManager.editTestStepsAndInitializeVar(currentTestStep)}"
                                                                             render="testStepsManagement"
                                                                             execute="@this">
                                                                <span class="gzl-icon-pencil"/>
                                                            </a4j:commandLink>
                                                            <a4j:commandLink id="testStepsDeleteSupport"
                                                                             actionListener="#{testsDefinitionsAdministrationManager.setSelectedTestSteps(currentTestStep)}"
                                                                             oncomplete="jq162('#TestStepsDeleteConfirmationModalPanel').modal('show');"
                                                                             execute="@this"
                                                                             rendered="#{applicationPreferenceManager.isPossibleToDeleteOnGMM()}"
                                                                             title="#{messages['gazelle.common.button.Delete']}"
                                                                             render=" :TestStepsDeleteConfirmationForm">
                                                                <span class="gzl-icon-trash-o"/>
                                                            </a4j:commandLink>
                                                        </h:panelGrid>
                                                    </g:column>
                                                    <g:column colspan="7" breakRowBefore="true" id="sdddddd"
                                                              style="background-color:#ccddee;">
                                                        <rich:togglePanel id="panel" initialState="empty"
                                                                          switchType="client"
                                                                          stateOrder="empty,first">
                                                            <rich:togglePanelItem name="empty">
                                                                <h:panelGroup id="pangroup1">
                                                                    <h:commandLink id="toggview"
                                                                                   style="font-weight:bold;"
                                                                                   value="#{messages['net.ihe.gazelle.tm.InputAndOutputContextualInformation']} (#{currentTestStep.sizeOfInputCI()} - #{currentTestStep.sizeOfOutputCI()})">
                                                                        <rich:toggleControl targetItem="first">
                                                                        </rich:toggleControl>
                                                                    </h:commandLink>
                                                                </h:panelGroup>
                                                            </rich:togglePanelItem>
                                                            <rich:togglePanelItem name="first">
                                                                <h:panelGroup>
                                                                    <h:commandLink style="font-weight:bold;"
                                                                                   value="#{messages['gazelle.common.button.Hide']}">
                                                                        <rich:toggleControl targetItem="empty">
                                                                        </rich:toggleControl>
                                                                    </h:commandLink>
                                                                    <table width="100%">
                                                                        <tr>
                                                                            <td style="width: 45%">
                                                                                <h:outputText
                                                                                        value="#{messages['gazelle.tm.test.InputContextualInformations']}"/>
                                                                                <br/><br/>
                                                                                <rich:dataTable id="CIIndt2"
                                                                                                var="currentCI"
                                                                                                rowKeyVar="10"
                                                                                                value="#{currentTestStep.inputContextualInformationList}"
                                                                                                first="0">
                                                                                    <g:column>
                                                                                        <ui:define name="header">
                                                                                            #{messages['gazelle.tf.table.Id']}
                                                                                        </ui:define>
                                                                                        <h:outputText
                                                                                                value="#{currentCI.id}"/>
                                                                                    </g:column>
                                                                                    <g:column>
                                                                                        <ui:define name="header">
                                                                                            #{messages['gazelle.tf.table.Label']}
                                                                                        </ui:define>
                                                                                        <h:outputText
                                                                                                value="#{currentCI.label}"/>
                                                                                    </g:column>
                                                                                    <g:column>
                                                                                        <ui:define name="header">
                                                                                            #{messages['gazelle.financial.invoice.InvoicePathForArray']}
                                                                                        </ui:define>
                                                                                        <h:outputText
                                                                                                value="#{currentCI.path.keyword}"/>
                                                                                    </g:column>
                                                                                    <g:column>
                                                                                        <ui:define name="header">
                                                                                            #{messages['gazelle.tm.testing.instance.ValueURL']}
                                                                                        </ui:define>
                                                                                        <h:outputText
                                                                                                value="#{currentCI.value}"/>
                                                                                    </g:column>
                                                                                </rich:dataTable>
                                                                            </td>
                                                                            <td style="vertical-align: middle;">
                                                                                <span class="gzl-icon-forward"/>
                                                                            </td>
                                                                            <td style="width: 45%">
                                                                                <h:outputText
                                                                                        value="#{messages['gazelle.tm.test.OutputContextualInformations']}"/>
                                                                                <br/><br/>
                                                                                <rich:dataTable id="CIoutdt"
                                                                                                var="currentCI"
                                                                                                rowKeyVar="10"
                                                                                                value="#{currentTestStep.outputContextualInformationList}"
                                                                                                first="0">
                                                                                    <g:column>
                                                                                        <ui:define name="header">
                                                                                            #{messages['gazelle.tf.table.Id']}
                                                                                        </ui:define>
                                                                                        <h:outputText
                                                                                                value="#{currentCI.id}"/>
                                                                                    </g:column>
                                                                                    <g:column>
                                                                                        <ui:define name="header">
                                                                                            #{messages['gazelle.tf.table.Label']}
                                                                                        </ui:define>
                                                                                        <h:outputText
                                                                                                value="#{currentCI.label}"/>
                                                                                    </g:column>
                                                                                    <g:column>
                                                                                        <ui:define name="header">
                                                                                            #{messages['gazelle.financial.invoice.InvoicePathForArray']}
                                                                                        </ui:define>
                                                                                        <h:outputText
                                                                                                value="#{currentCI.path.keyword}"/>
                                                                                    </g:column>
                                                                                    <g:column>
                                                                                        <ui:define name="header">
                                                                                            #{messages['gazelle.tm.testing.instance.ValueURL']}
                                                                                        </ui:define>
                                                                                        <h:outputText
                                                                                                value="#{currentCI.value}"/>
                                                                                    </g:column>
                                                                                </rich:dataTable>
                                                                            </td>
                                                                        </tr>
                                                                    </table>
                                                                </h:panelGroup>
                                                            </rich:togglePanelItem>
                                                        </rich:togglePanel>
                                                    </g:column>
                                                    <g:column style="text-align:left;background-color:#ccddee;"
                                                              colspan="9"
                                                              breakRowBefore="true">
                                                        <f:subview id="subview_20">
                                                            <ui:include src="configFileList.xhtml">
                                                                <ui:param name="currentTestStep"
                                                                          value="#{currentTestStep}"/>
                                                                <ui:param name="initialState" value="empty"/>
                                                            </ui:include>
                                                        </f:subview>
                                                    </g:column>
                                                </rich:dataTable>
                                                <div align="right">
                                                    <a4j:commandButton value="#{messages['gazelle.tm.AddANewStep']}"
                                                                       id="addnewsteps"
                                                                       actionListener="#{testsDefinitionsAdministrationManager.addNewTestSteps()}"
                                                                       styleClass="gzl-btn"
                                                                       render="testStepsManagement"/>
                                                </div>
                                            </ui:decorate>
                                        </h:panelGroup>
                                        <!-- ============================ --><!-- Panel to support creation of --><!-- ITB Test Steps		 		  --><!-- ============================ -->
                                        <h:panelGroup
                                                rendered="#{testsDefinitionsAdministrationManager.showTestStepsEditionPanel}">
                                            <ui:decorate template="/layout/panels/_panel_title_id.xhtml">
                                                <ui:param name="panel_id" value="AddNewTestStepsPanelITB"/>
                                                <ui:define name="panel_title">
                                                    #{messages['net.ihe.gazelle.tm.AddANewTestStep']}
                                                </ui:define>
                                                <div class="row">
                                                    <div class="col-md-3">
                                                        <a4j:region id="stepIndexRegionITB">
                                                            <s:decorate id="stepIndexDecorationITB"
                                                                        template="/layout/form/_edit.xhtml">
                                                                <ui:param name="id" value="stepIndex"/>
                                                                <ui:define name="label">
                                                                    #{messages['gazelle.tm.StepIndex']}
                                                                </ui:define>
                                                                <h:inputText id="stepIndex"
                                                                             value="#{testsDefinitionsAdministrationManager.selectedTestSteps.stepIndex}"
                                                                             required="true">
                                                                    <a4j:ajax event="blur"
                                                                              render="stepIndexDecorationITB"
                                                                              listener="#{testsDefinitionsAdministrationManager.validateStepIndex()}"/>
                                                                </h:inputText>
                                                            </s:decorate>
                                                        </a4j:region>
                                                    </div>
                                                    <div class="col-md-3">
                                                        <a4j:region id="isSecuredRegionITB">
                                                            <s:decorate id="isSecuredDecorationITB"
                                                                        template="/layout/form/_checkbox.xhtml">
                                                                <ui:param name="id" value="isSecuredITB"/>
                                                                <h:selectBooleanCheckbox
                                                                        id="isSecuredITB"
                                                                        value="#{testsDefinitionsAdministrationManager.selectedTestSteps.secured}">
                                                                </h:selectBooleanCheckbox>
                                                                <ui:define name="label">
                                                                    <h:outputText id="isSecuredTextITB"
                                                                                  value="#{messages['gazelle.tm.testing.testsDefinition.secured']}"/>
                                                                </ui:define>
                                                            </s:decorate>
                                                        </a4j:region>
                                                    </div>
                                                    <div class="col-md-3">
                                                        <a4j:region id="autoTriggerRegion">
                                                            <s:decorate id="autoTriggerDecoration"
                                                                        template="/layout/form/_checkbox.xhtml">
                                                                <ui:param name="id" value="nameInput"/>
                                                                <h:selectBooleanCheckbox
                                                                        id="autoTrigger"
                                                                        value="#{testsDefinitionsAdministrationManager.selectedTestSteps.autoTriggered}">
                                                                </h:selectBooleanCheckbox>
                                                                <ui:define name="label">
                                                                    #{messages['gazelle.tm.testdefinitions.AutomaticallyactivateTestStep']}
                                                                </ui:define>
                                                            </s:decorate>
                                                        </a4j:region>
                                                    </div>
                                                    <div class="col-md-3">
                                                        <a4j:region id="autoCompleteRegion">
                                                            <s:decorate id="autoCompleteDecoration"
                                                                        template="/layout/form/_checkbox.xhtml">
                                                                <ui:param name="id" value="autoComplete"/>
                                                                <h:selectBooleanCheckbox
                                                                        id="autoComplete"
                                                                        value="#{testsDefinitionsAdministrationManager.selectedTestSteps.autoComplete}">
                                                                </h:selectBooleanCheckbox>
                                                                <ui:define name="label">
                                                                    #{messages['gazelle.tm.testdefinitions.AutomaticallymarkTestStepascompleted']}
                                                                </ui:define>
                                                            </s:decorate>
                                                        </a4j:region>
                                                    </div>
                                                </div>
                                                <table cellpadding="5" cellspacing="5">
                                                    <tr>
                                                        <td valign="top">
                                                            <table cellpadding="10" cellspacing="5"
                                                                   id="rolesConfigurationPanel"
                                                                   class="table table-striped table-bordered">
                                                                <thead>
                                                                <tr>
                                                                    <th colspan="2" align="center">
                                                                        <h:outputText
                                                                                value="#{messages['gazelle.tm.testdefinitions.InitiatorRoleConfigurations']}"/>
                                                                    </th>
                                                                    <th colspan="2" align="center">
                                                                        <h:outputText
                                                                                value="#{messages['gazelle.tm.testdefinitions.ResponderRoleConfigurations']}"/>
                                                                    </th>
                                                                </tr>
                                                                </thead>
                                                                <tbody>
                                                                <tr>
                                                                    <td valign="top" colspan="2"
                                                                        id="initiatorRoleDefTd">
                                                                        <a4j:region id="testRolesInitiatorRegionITB">
                                                                            <s:decorate
                                                                                    id="testRolesInitiatorDecorationITB"
                                                                                    template="/layout/form/_edit.xhtml">
                                                                                <ui:define name="label">
                                                                                    #{messages['gazelle.tm.InitiatorRole']}
                                                                                </ui:define>
                                                                                <h:selectOneMenu
                                                                                        styleClass="form-control gzl-form-control"
                                                                                        id="creationInitiatorListBoxITB"
                                                                                        value="#{testsDefinitionsAdministrationManager.selectedTestSteps.testRolesInitiator}"
                                                                                        style="font-weight:bold;text-align:center;"
                                                                                        required="true">
                                                                                    <s:selectItems
                                                                                            value="#{testsDefinitionsAdministrationManager.getPossibleInitiatorTestRoles()}"
                                                                                            var="selectedInitiatorTestRoles"
                                                                                            noSelectionLabel="#{messages['gazelle.common.PleaseSelect']}"
                                                                                            label="#{selectedInitiatorTestRoles.roleInTest.keyword}"/>
                                                                                    <a4j:ajax event="change"
                                                                                              render="transactionDecorationITB,transactionTestRolesResponderITB,responderValidationProfileRegionPanel,responderMessageTypeDecoration,messageTypeDecorationITB,initiatorValidationProfileRegionPanel"
                                                                                              listener="#{testsDefinitionsAdministrationManager.resetTransactionValue()}"/>
                                                                                </h:selectOneMenu>
                                                                                <rich:message
                                                                                        for="creationInitiatorListBoxITB"
                                                                                        style="color:red;font-size:x-small;">
                                                                                    <f:facet name="errorMarker">
                                                                                        <span class="gzl-icon-times-circle"/>
                                                                                    </f:facet>
                                                                                </rich:message>
                                                                            </s:decorate>
                                                                        </a4j:region>
                                                                    </td>
                                                                    <td valign="top" colspan="2"
                                                                        id="responderRoleDefTd">
                                                                        <s:div id="transactionTestRolesResponderITB">
                                                                            <a4j:region id="testRolesResponderRegionITB"
                                                                                        rendered="#{!testsDefinitionsAdministrationManager.autoResponse}">
                                                                                <s:decorate
                                                                                        id="testRolesResponderDecorationITB"
                                                                                        template="/layout/form/_edit.xhtml">
                                                                                    <ui:define name="label">
                                                                                        #{messages['gazelle.tm.ResponderRole']}
                                                                                    </ui:define>
                                                                                    <h:selectOneMenu
                                                                                            styleClass="form-control gzl-form-control"
                                                                                            id="creationResponderListBoxITB"
                                                                                            required="true"
                                                                                            value="#{testsDefinitionsAdministrationManager.selectedTestSteps.testRolesResponder}"
                                                                                            style="font-weight:bold;text-align:center;"
                                                                                            disabled="#{testsDefinitionsAdministrationManager.autoResponse}">
                                                                                        <s:selectItems
                                                                                                value="#{testsDefinitionsAdministrationManager.possibleTestRolesResponder}"
                                                                                                var="selectedResponderTestRoles"
                                                                                                noSelectionLabel="#{messages['gazelle.common.PleaseSelect']}"
                                                                                                label="#{selectedResponderTestRoles.roleInTest.keyword}"/>
                                                                                        <a4j:ajax event="change"
                                                                                                  render="responderMessageTypeDecoration"/>
                                                                                    </h:selectOneMenu>
                                                                                </s:decorate>
                                                                            </a4j:region>
                                                                        </s:div>
                                                                    </td>
                                                                </tr>
                                                                <tr>
                                                                    <td valign="top" colspan="2"
                                                                        id="initiatorTransDefTd"><!-- ============================= --><!-- Transaction Region            --><!-- ============================= -->
                                                                        <h:panelGrid columns="2"
                                                                                     columnClasses="top,top">
                                                                            <a4j:region id="transactionRegionITB">
                                                                                <s:decorate
                                                                                        id="transactionDecorationITB"
                                                                                        template="/layout/form/_edit.xhtml">
                                                                                    <ui:define name="label">
                                                                                        #{messages['gazelle.tf.Transaction']}
                                                                                    </ui:define>
                                                                                    <h:selectOneMenu
                                                                                            styleClass="form-control gzl-form-control"
                                                                                            id="CreateTransactionListBoxITB"
                                                                                            required="true"
                                                                                            value="#{testsDefinitionsAdministrationManager.selectedTestSteps.transaction}"
                                                                                            style="font-weight:bold;text-align:center;">
                                                                                        <s:selectItems
                                                                                                value="#{testsDefinitionsAdministrationManager.possibleTransactions}"
                                                                                                var="selectedTransaction"
                                                                                                noSelectionLabel="..."
                                                                                                label="#{selectedTransaction.keyword}"/>
                                                                                        <a4j:ajax event="change"
                                                                                                  render="testRolesResponderDecorationITB,udagedivITB,messageTypeDecorationITB,responderMessageTypeDecoration"
                                                                                                  execute="@this"
                                                                                                  listener="#{testsDefinitionsAdministrationManager.resetTestRolesResponderValue()}"/>
                                                                                    </h:selectOneMenu>
                                                                                    <rich:message
                                                                                            for="CreateTransactionListBoxITB"
                                                                                            style="color:red;font-size:x-small;">
                                                                                        <f:facet name="errorMarker">
                                                                                            <span class="gzl-icon-times-circle"/>
                                                                                        </f:facet>
                                                                                    </rich:message>
                                                                                </s:decorate>
                                                                            </a4j:region>
                                                                            <s:div id="udagedivITB">
                                                                                <s:decorate id="usagedecITB"
                                                                                            template="/layout/form/_edit.xhtml"
                                                                                            rendered="#{testsDefinitionsAdministrationManager.canEditUsage()}">
                                                                                    <ui:define name="label">
                                                                                        #{messages['gazelle.tf.Usage']}
                                                                                    </ui:define>
                                                                                    <h:selectOneMenu
                                                                                            styleClass="form-control gzl-form-control"
                                                                                            id="usageselITB"
                                                                                            value="#{testsDefinitionsAdministrationManager.selectedTestSteps.wstransactionUsage}"
                                                                                            disabled="#{testsDefinitionsAdministrationManager.autoResponse}">
                                                                                        <s:selectItems
                                                                                                value="#{testsDefinitionsAdministrationManager.possibleWSTransactionUsages}"
                                                                                                var="wstr"
                                                                                                noSelectionLabel="..."
                                                                                                label="#{wstr.usage}"/>
                                                                                    </h:selectOneMenu>
                                                                                </s:decorate>
                                                                            </s:div>
                                                                        </h:panelGrid>
                                                                    </td>
                                                                    <td valign="top" colspan="2"
                                                                        id="responderTransDefTd">

                                                                    </td>
                                                                </tr>
                                                                <tr>
                                                                    <td valign="top" colspan="2"
                                                                        id="initiatorMsgTypeDefTd"><!-- ============================= --><!-- Initiator Message Type Region --><!-- ============================= -->
                                                                        <a4j:region id="messageTypeRegionITB">
                                                                            <s:decorate id="messageTypeDecorationITB"
                                                                                        template="/layout/form/_edit.xhtml">
                                                                                <ui:define name="label">
                                                                                    #{messages['gazelle.tm.testdefinitions.InitiatorMessageType']}
                                                                                </ui:define>
                                                                                <h:selectOneMenu
                                                                                        styleClass="form-control gzl-form-control"
                                                                                        id="creationMessageTypeListBox"
                                                                                        required="true"
                                                                                        value="#{testsDefinitionsAdministrationManager.selectedTestSteps.messageType}"
                                                                                        style="font-weight:bold;text-align:center;"
                                                                                        rendered="#{testsDefinitionsAdministrationManager.getPossibleMessageType()!=null}">
                                                                                    <s:selectItems
                                                                                            value="#{testsDefinitionsAdministrationManager.getPossibleMessageType()}"
                                                                                            var="messageType"
                                                                                            noSelectionLabel="#{messages['gazelle.common.PleaseSelect']}"
                                                                                            label="#{messageType}"/>
                                                                                    <a4j:ajax event="change"
                                                                                              render="initiatorValidationProfileRegionPanel,responderMessageTypeDecoration,responderValidationProfileRegion"/>
                                                                                </h:selectOneMenu>
                                                                            </s:decorate>
                                                                        </a4j:region>
                                                                    </td>
                                                                    <td valign="top" colspan="2"
                                                                        id="responderMsgTypeDefTd"><!-- ============================= --><!-- Responder Message Type Region --><!-- ============================= -->
                                                                        <a4j:region id="responderMessageTypeRegion">
                                                                            <s:decorate
                                                                                    id="responderMessageTypeDecoration"
                                                                                    template="/layout/form/_edit.xhtml">
                                                                                <ui:define name="label">
                                                                                    #{messages['gazelle.tm.testdefinitions.ResponderMessageType']}
                                                                                </ui:define>
                                                                                <h:selectOneMenu
                                                                                        styleClass="form-control gzl-form-control"
                                                                                        id="responderCreationMessageTypeListBox"
                                                                                        required="true"
                                                                                        value="#{testsDefinitionsAdministrationManager.selectedTestSteps.responderMessageType}"
                                                                                        style="font-weight:bold;text-align:center;"
                                                                                        rendered="#{testsDefinitionsAdministrationManager.retrievePossibleResponseMessageTypes()!=null}">
                                                                                    <s:selectItems
                                                                                            value="#{testsDefinitionsAdministrationManager.retrievePossibleResponseMessageTypes()}"
                                                                                            var="messageType"
                                                                                            noSelectionLabel="#{messages['gazelle.common.PleaseSelect']}"
                                                                                            label="#{messageType}"/>
                                                                                    <a4j:ajax event="change"
                                                                                              render="responderValidationProfileRegionPanel"/>
                                                                                </h:selectOneMenu>
                                                                            </s:decorate>
                                                                        </a4j:region>
                                                                    </td>
                                                                </tr>
                                                                <tr>
                                                                    <td valign="top" colspan="2"
                                                                        id="initiatorValidationProfDefTd">
                                                                        <a4j:region
                                                                                id="initiatorValidationProfileRegion">
                                                                            <a4j:outputPanel
                                                                                    id="initiatorValidationProfileRegionPanel">
                                                                                <s:decorate
                                                                                        id="initiatorValidationProfileDecoration"
                                                                                        template="/layout/form/_edit.xhtml">
                                                                                    <ui:define name="label">
                                                                                        #{messages['gazelle.tm.testdefinitions.BaseProfileForValidation']}
                                                                                    </ui:define>
                                                                                    <h:selectOneMenu
                                                                                            styleClass="form-control gzl-form-control"
                                                                                            id="initValidationOptionListBox"
                                                                                            required="true"
                                                                                            value="#{testsDefinitionsAdministrationManager.selectedReqMsgType}"
                                                                                            style="font-weight:bold;text-align:center;"
                                                                                            rendered="#{!empty testsDefinitionsAdministrationManager.selectedTestSteps.messageType}">
                                                                                        <s:selectItems
                                                                                                value="#{testsDefinitionsAdministrationManager.findValidationProfile(testsDefinitionsAdministrationManager.selectedTestSteps.messageType,'REQUEST')}"
                                                                                                var="tfHl7MessageProfile"
                                                                                                noSelectionLabel="#{messages['gazelle.common.PleaseSelect']}"
                                                                                                label="#{tfHl7MessageProfile.messageType} - #{tfHl7MessageProfile.hl7Version}: #{tfHl7MessageProfile.profileOid}"/>
                                                                                        <a4j:ajax event="change"
                                                                                                  render="linkForInitiatorValidationProfile"
                                                                                                  execute="@this"/>
                                                                                    </h:selectOneMenu>
                                                                                </s:decorate>
                                                                                <a4j:outputPanel
                                                                                        id="linkForInitiatorValidationProfile">
                                                                                    <s:decorate
                                                                                            id="initiatorValidationServiceLinkDecoration"
                                                                                            template="/layout/display/_display.xhtml">
                                                                                        <ui:define name="label">
                                                                                            <h:outputText
                                                                                                    value="#{messages['gazelle.tm.testdefinitions.LinkToProfile']}"
                                                                                                    rendered="#{!empty testsDefinitionsAdministrationManager.selectedReqMsgType}"/>
                                                                                        </ui:define>
                                                                                        <h:outputLink target="blank"
                                                                                                      value="http://gazelle.ihe.net/GazelleHL7Validator/viewProfile.seam?oid=#{testsDefinitionsAdministrationManager.selectedReqMsgType.profileOid}"
                                                                                                      rendered="#{!empty testsDefinitionsAdministrationManager.selectedTestSteps.messageType}">
                                                                                            <h:outputText
                                                                                                    value="#{testsDefinitionsAdministrationManager.selectedReqMsgType.messageType} : #{testsDefinitionsAdministrationManager.selectedReqMsgType.profileOid}"/>
                                                                                        </h:outputLink>
                                                                                    </s:decorate>
                                                                                </a4j:outputPanel>
                                                                            </a4j:outputPanel>
                                                                        </a4j:region>
                                                                    </td>
                                                                    <td colspan="2" valign="top"
                                                                        id="responderValidationProfDefTd">
                                                                        <a4j:region
                                                                                id="responderValidationProfileRegion">
                                                                            <a4j:outputPanel
                                                                                    id="responderValidationProfileRegionPanel">
                                                                                <s:decorate
                                                                                        id="responderValidationProfileDecoration"
                                                                                        template="/layout/form/_edit.xhtml">
                                                                                    <ui:define name="label">
                                                                                        #{messages['gazelle.tm.testdefinitions.BaseProfileForValidation']}
                                                                                    </ui:define>
                                                                                    <h:selectOneMenu
                                                                                            styleClass="form-control gzl-form-control"
                                                                                            id="rspValidationOptionListBox"
                                                                                            required="true"
                                                                                            value="#{testsDefinitionsAdministrationManager.selectedRspMsgType}"
                                                                                            style="font-weight:bold;text-align:center;"
                                                                                            rendered="#{!empty testsDefinitionsAdministrationManager.selectedTestSteps.responderMessageType}">
                                                                                        <s:selectItems
                                                                                                value="#{testsDefinitionsAdministrationManager.findValidationProfile(testsDefinitionsAdministrationManager.selectedTestSteps.responderMessageType,'RESPONSE')}"
                                                                                                var="tfHl7MessageProfile"
                                                                                                noSelectionLabel="#{messages['gazelle.common.PleaseSelect']}"
                                                                                                label="#{tfHl7MessageProfile.messageType} - #{tfHl7MessageProfile.hl7Version}: #{tfHl7MessageProfile.profileOid}"/>
                                                                                        <a4j:ajax event="change"
                                                                                                  render="linkForResponderValidationProfile"
                                                                                                  execute="@this"/>
                                                                                    </h:selectOneMenu>
                                                                                </s:decorate>
                                                                                <a4j:outputPanel
                                                                                        id="linkForResponderValidationProfile">
                                                                                    <s:decorate
                                                                                            id="responderValidationServiceLinkDecoration"
                                                                                            template="/layout/display/_display.xhtml">
                                                                                        <ui:define name="label">
                                                                                            <h:outputText
                                                                                                    style="color:rgb(51, 77, 85);"
                                                                                                    rendered="#{!empty testsDefinitionsAdministrationManager.selectedRspMsgType}"
                                                                                                    value="#{messages['gazelle.tm.testdefinitions.LinkToProfile']}"/>
                                                                                        </ui:define>
                                                                                        <h:outputLink target="blank"
                                                                                                      value="http://gazelle.ihe.net/GazelleHL7Validator/viewProfile.seam?oid=#{testsDefinitionsAdministrationManager.selectedRspMsgType.profileOid}"
                                                                                                      rendered="#{!empty testsDefinitionsAdministrationManager.selectedTestSteps.responderMessageType}">
                                                                                            <h:outputText
                                                                                                    value="#{testsDefinitionsAdministrationManager.selectedRspMsgType.messageType} : #{testsDefinitionsAdministrationManager.selectedRspMsgType.profileOid}"/>
                                                                                        </h:outputLink>
                                                                                    </s:decorate>
                                                                                </a4j:outputPanel>
                                                                            </a4j:outputPanel>
                                                                        </a4j:region>
                                                                    </td>
                                                                </tr>
                                                                <tr>
                                                                    <td colspan="2" valign="top"
                                                                        id="initiatorValidationSrvDefTd">
                                                                        <a4j:region
                                                                                id="initiatorValidationServiceRegion">
                                                                            <s:decorate
                                                                                    id="initiatorValidationServiceDecoration"
                                                                                    template="/layout/form/_edit.xhtml">
                                                                                <ui:define name="label">
                                                                                    #{messages['gazelle.tm.testdefinitions.ValidateMessageUsing']}
                                                                                </ui:define>
                                                                                <h:selectOneMenu
                                                                                        styleClass="form-control gzl-form-control"
                                                                                        id="initiatorValidationServiceOptionListBox"
                                                                                        required="true"
                                                                                        value="#{testsDefinitionsAdministrationManager.selectedReqValidationService}"
                                                                                        style="font-weight:bold;text-align:center;">
                                                                                    <s:selectItems
                                                                                            value="#{testsDefinitionsAdministrationManager.validationServices}"
                                                                                            noSelectionLabel="#{messages['gazelle.common.PleaseSelect']}"
                                                                                            var="selectedValidationService"
                                                                                            label="#{messages[selectedValidationService.labelKeyForDisplay]}"/>
                                                                                </h:selectOneMenu>
                                                                            </s:decorate>
                                                                        </a4j:region>
                                                                    </td>
                                                                    <td colspan="2" valign="top"
                                                                        id="responderValidationSrvDefTd">
                                                                        <a4j:region
                                                                                id="responderValidationServiceRegion">
                                                                            <s:decorate
                                                                                    id="responderValidationServiceDecoration"
                                                                                    template="/layout/form/_edit.xhtml">
                                                                                <ui:define name="label">
                                                                                    #{messages['gazelle.tm.testdefinitions.ValidateMessageUsing']}
                                                                                </ui:define>
                                                                                <h:selectOneMenu
                                                                                        styleClass="form-control gzl-form-control"
                                                                                        id="responderValidationServiceOptionListBox"
                                                                                        required="true"
                                                                                        value="#{testsDefinitionsAdministrationManager.selectedRspValidationService}"
                                                                                        style="font-weight:bold;text-align:center;">
                                                                                    <s:selectItems
                                                                                            value="#{testsDefinitionsAdministrationManager.validationServices}"
                                                                                            var="selectedValidationService"
                                                                                            noSelectionLabel="#{messages['gazelle.common.PleaseSelect']}"
                                                                                            label="#{messages[selectedValidationService.labelKeyForDisplay]}"/>
                                                                                </h:selectOneMenu>
                                                                            </s:decorate>
                                                                        </a4j:region>
                                                                    </td>
                                                                </tr>
                                                                <tr>
                                                                    <c:set var="reqValidationContextUrl"
                                                                           value="../test/interop/validationContext.seam?smpId=#{testsDefinitionsAdministrationManager.selectedTestSteps.requestMessageProfile.id}"/>
                                                                    <c:set var="reqValidationContextFileName"
                                                                           value="#{testsDefinitionsAdministrationManager.selectedTestSteps.requestMessageProfile.validationContextFileName}"/>
                                                                    <c:set var="respValidationContextUrl"
                                                                           value="../test/interop/validationContext.seam?smpId=#{testsDefinitionsAdministrationManager.selectedTestSteps.responseMessageProfile.id}"/>
                                                                    <c:set var="respValidationContextFileName"
                                                                           value="#{testsDefinitionsAdministrationManager.selectedTestSteps.responseMessageProfile.validationContextFileName}"/>
                                                                    <td colspan="2" valign="top"
                                                                        id="initiatorValidationCtxDefTd">

                                                                        <a4j:region
                                                                                id="initiatorValidationContextRegion">
                                                                            <s:decorate
                                                                                    id="initiatorValidationContextDecoration"
                                                                                    template="/layout/form/_edit.xhtml">
                                                                                <ui:param name="id"
                                                                                          value="initValContInput"/>
                                                                                <ui:define name="label">
                                                                                    #{messages['gazelle.tm.testdefinitions.ValidationContextForInitiatorMessage']}
                                                                                </ui:define>
                                                                                <a4j:outputPanel
                                                                                        id="initiatorValidationContextUploadDialog">
                                                                                    <a style="display:#{!empty reqValidationContextFileName ? 'inline' : 'none'};"
                                                                                       href="${reqValidationContextUrl}"
                                                                                       onclick="window.open('${reqValidationContextUrl}', '#{reqValidationContextFileName}','${popupOptions}');return false;">#{reqValidationContextFileName}</a>
                                                                                    <a4j:commandButton
                                                                                            styleClass="gzl-btn"
                                                                                            value="#{messages['net.ihe.gazelle.tm.Change']}"
                                                                                            rendered="#{!empty testsDefinitionsAdministrationManager.initiatorValidationCtxFile}"
                                                                                            actionListener="#{testsDefinitionsAdministrationManager.changeFile}"
                                                                                            render="initiatorValidationContextDecoration">
                                                                                        <f:attribute
                                                                                                name="testStepRole"
                                                                                                value="INITIATOR"/>
                                                                                        <f:attribute
                                                                                                name="configFileType"
                                                                                                value="VALIDATION_CONTEXT"/>
                                                                                    </a4j:commandButton>
                                                                                    <br/>
                                                                                    <h:inputTextarea
                                                                                            id="initValContInput"
                                                                                            styleClass=" form-control"
                                                                                            readonly="true"
                                                                                            cols="60"
                                                                                            rows="8"
                                                                                            rendered="#{!empty testsDefinitionsAdministrationManager.initiatorValidationCtxFile}"
                                                                                            value="#{testsDefinitionsAdministrationManager.initiatorValidationCtxFile.dataAsString}"/>
                                                                                    <h:outputText
                                                                                            value="#{messages['gazelle.tm.testdefinitions.Supportfiletypes']}: #{messages['net.ihe.gazelle.tm.XML']}"
                                                                                            rendered="#{empty testsDefinitionsAdministrationManager.initiatorValidationCtxFile}"/>
                                                                                    <rich:fileUpload
                                                                                            fileUploadListener="#{testsDefinitionsAdministrationManager.fileUploadListener}"
                                                                                            maxFilesQuantity="1"
                                                                                            addControlLabel="#{messages['gazelle.tm.testdefinitions.ChooseFileToUpload']}"
                                                                                            id="initiatorValidationContextFileUpload"
                                                                                            listHeight="75px"
                                                                                            listwidth="100px"
                                                                                            immediateUpload="true"
                                                                                            allowFlash="false"
                                                                                            acceptedTypes="xml"
                                                                                            onclear="reRenderInitValiCtxUploadDialog()"
                                                                                            onuploadcanceled="reRenderInitValiCtxUploadDialog()"
                                                                                            uploadControlLabel="#{messages['net.ihe.gazelle.UploadSelectedFile']}"
                                                                                            uploadButtonClass="gzl-btn"
                                                                                            rendered="#{empty testsDefinitionsAdministrationManager.initiatorValidationCtxFile}">
                                                                                        <f:attribute
                                                                                                name="testStepRole"
                                                                                                value="INITIATOR"/>
                                                                                        <f:attribute
                                                                                                name="configFileType"
                                                                                                value="VALIDATION_CONTEXT"/>
                                                                                    </rich:fileUpload>
                                                                                    <a4j:commandButton
                                                                                            id="initiatorValidationCtxUploadCancelBtn"
                                                                                            styleClass="gzl-btn"
                                                                                            value="#{messages['gazelle.tm.cancel']}"
                                                                                            actionListener="#{testsDefinitionsAdministrationManager.cancelFileUpload}"
                                                                                            oncomplete="reRenderInitValiCtxUploadDialog()"
                                                                                            rendered="#{empty testsDefinitionsAdministrationManager.initiatorValidationCtxFile}"
                                                                                            render="initiatorValidationContextUploadDialog"/>
                                                                                </a4j:outputPanel>
                                                                            </s:decorate>
                                                                        </a4j:region>

                                                                    </td>
                                                                    <td valign="top" colspan="2"
                                                                        id="responderValidationCtxDefTd">

                                                                        <a4j:region
                                                                                id="responderValidationContextRegion">
                                                                            <s:decorate
                                                                                    id="responderValidationContextDecoration"
                                                                                    template="/layout/form/_edit.xhtml">
                                                                                <ui:param name="id"
                                                                                          value="valContInput"/>
                                                                                <ui:define name="label">
                                                                                    #{messages['gazelle.tm.testdefinitions.ValidationContextForResponderMessage']}
                                                                                </ui:define>
                                                                                <a4j:outputPanel
                                                                                        id="responderValidationContextUploadDialog">
                                                                                    <a style="display:#{!empty respValidationContextFileName ? 'inline' : 'none'};"
                                                                                       href="${respValidationContextUrl}"
                                                                                       onclick="window.open('${respValidationContextUrl}', '#{respValidationContextFileName}','${popupOptions}');return false;">#{respValidationContextFileName}</a>
                                                                                    <a4j:commandButton
                                                                                            styleClass="gzl-btn"
                                                                                            value="#{messages['net.ihe.gazelle.tm.Change']}"
                                                                                            rendered="#{!empty testsDefinitionsAdministrationManager.responderValidationCtxFile}"
                                                                                            actionListener="#{testsDefinitionsAdministrationManager.changeFile}"
                                                                                            render="responderValidationContextDecoration">
                                                                                        <f:attribute
                                                                                                name="testStepRole"
                                                                                                value="RESPONDER"/>
                                                                                        <f:attribute
                                                                                                name="configFileType"
                                                                                                value="VALIDATION_CONTEXT"/>
                                                                                    </a4j:commandButton>
                                                                                    <br/>
                                                                                    <h:inputTextarea
                                                                                            id="valContInput"
                                                                                            styleClass=" form-control"
                                                                                            readonly="true"
                                                                                            cols="60"
                                                                                            rows="8"
                                                                                            rendered="#{!empty testsDefinitionsAdministrationManager.responderValidationCtxFile}"
                                                                                            value="#{testsDefinitionsAdministrationManager.responderValidationCtxFile.dataAsString}"/>
                                                                                    <h:outputText
                                                                                            value="#{messages['gazelle.tm.testdefinitions.Supportfiletypes']}: #{messages['net.ihe.gazelle.tm.XML']}"
                                                                                            rendered="#{empty testsDefinitionsAdministrationManager.responderValidationCtxFile}"/>
                                                                                    <rich:fileUpload
                                                                                            fileUploadListener="#{testsDefinitionsAdministrationManager.fileUploadListener}"
                                                                                            maxFilesQuantity="1"
                                                                                            addControlLabel="#{messages['gazelle.tm.testdefinitions.ChooseFileToUpload']}"
                                                                                            id="responderValidationContextFileUpload"
                                                                                            listHeight="75px"
                                                                                            listwidth="100px"
                                                                                            immediateUpload="true"
                                                                                            allowFlash="false"
                                                                                            acceptedTypes="xml"
                                                                                            onuploadcanceled="reRenderRspValiCtxUploadDialog()"
                                                                                            onclear="reRenderRspValiCtxUploadDialog()"
                                                                                            rendered="#{empty testsDefinitionsAdministrationManager.responderValidationCtxFile}"
                                                                                            uploadControlLabel="#{messages['net.ihe.gazelle.UploadSelectedFile']}"
                                                                                            uploadButtonClass="gzl-btn">
                                                                                        <f:attribute
                                                                                                name="testStepRole"
                                                                                                value="RESPONDER"/>
                                                                                        <f:attribute
                                                                                                name="configFileType"
                                                                                                value="VALIDATION_CONTEXT"/>
                                                                                    </rich:fileUpload>
                                                                                    <a4j:commandButton
                                                                                            styleClass="gzl-btn"
                                                                                            id="responderValidationCtxUploadCancelBtn"
                                                                                            value="#{messages['gazelle.tm.cancel']}"
                                                                                            actionListener="#{testsDefinitionsAdministrationManager.cancelFileUpload}"
                                                                                            oncomplete="reRenderRspValiCtxUploadDialog()"
                                                                                            rendered="#{empty testsDefinitionsAdministrationManager.responderValidationCtxFile}"/>
                                                                                </a4j:outputPanel>
                                                                            </s:decorate>
                                                                        </a4j:region>

                                                                    </td>
                                                                </tr>
                                                                <tr>
                                                                    <c:set var="reqExampleMsgUrl"
                                                                           value="../test/interop/exampleMessage.seam?smpId=#{testsDefinitionsAdministrationManager.selectedTestSteps.requestMessageProfile.id}"/>
                                                                    <c:set var="reqExampleMsgFileName"
                                                                           value="#{testsDefinitionsAdministrationManager.selectedTestSteps.requestMessageProfile.exampleMsgFileName}"/>
                                                                    <c:set var="respExampleMsgUrl"
                                                                           value="../test/interop/exampleMessage.seam?smpId=#{testsDefinitionsAdministrationManager.selectedTestSteps.responseMessageProfile.id}"/>
                                                                    <c:set var="respExampleMsgFileName"
                                                                           value="#{testsDefinitionsAdministrationManager.selectedTestSteps.responseMessageProfile.exampleMsgFileName}"/>
                                                                    <td valign="top" colspan="2"
                                                                        id="initiatorEgMsgDefTd">

                                                                        <a4j:region id="initiatorExampleMsgRegion">
                                                                            <s:decorate
                                                                                    id="initiatorExampleMsgDecoration"
                                                                                    template="/layout/form/_edit.xhtml">
                                                                                <ui:param name="id"
                                                                                          value="exampleMessInput"/>
                                                                                <ui:define name="label">
                                                                                    #{messages['gazelle.tm.testdefinitions.ExampleMessageForInitiator']}
                                                                                </ui:define>
                                                                                <a4j:outputPanel
                                                                                        id="initiatorExampleMsgUploadDialog">
                                                                                    <a
                                                                                            style="display:#{!empty reqExampleMsgFileName ? 'inline' : 'none'};"
                                                                                            href="${reqExampleMsgUrl}"
                                                                                            onclick="window.open('${reqExampleMsgUrl}', '#{reqExampleMsgFileName}','${exampleMsgPopupOptions}');return false;">#{reqExampleMsgFileName}</a>
                                                                                    <a4j:commandButton
                                                                                            styleClass="gzl-btn"
                                                                                            value="#{messages['net.ihe.gazelle.tm.Change']}"
                                                                                            rendered="#{!empty testsDefinitionsAdministrationManager.initiatorExampleMsg}"
                                                                                            actionListener="#{testsDefinitionsAdministrationManager.changeFile}"
                                                                                            render="initiatorExampleMsgDecoration">
                                                                                        <f:attribute
                                                                                                name="testStepRole"
                                                                                                value="INITIATOR"/>
                                                                                        <f:attribute
                                                                                                name="configFileType"
                                                                                                value="EXAMPLE_MESSAGE"/>
                                                                                    </a4j:commandButton>
                                                                                    <br/>
                                                                                    <h:inputTextarea
                                                                                            id="exampleMessInput"
                                                                                            styleClass=" form-control"
                                                                                            readonly="true"
                                                                                            cols="60"
                                                                                            rows="8"
                                                                                            rendered="#{!empty testsDefinitionsAdministrationManager.initiatorExampleMsg}"
                                                                                            value="#{testsDefinitionsAdministrationManager.initiatorExampleMsg.dataAsString}"/>
                                                                                    <h:outputText
                                                                                            value="#{messages['gazelle.tm.testdefinitions.Supportfiletypes']}: #{messages['net.ihe.gazelle.tm.XML']}, #{messages['net.ihe.gazelle.tm.ER7']}, #{messages['net.ihe.gazelle.tm.JSON']}, #{messages['net.ihe.gazelle.tm.TXT']}"
                                                                                            rendered="#{empty testsDefinitionsAdministrationManager.initiatorExampleMsg}"/>
                                                                                    <rich:fileUpload
                                                                                            fileUploadListener="#{testsDefinitionsAdministrationManager.fileUploadListener}"
                                                                                            maxFilesQuantity="1"
                                                                                            addControlLabel="#{messages['gazelle.tm.testdefinitions.ChooseFileToUpload']}"
                                                                                            id="initiatorExampleMsgFileUpload"
                                                                                            listHeight="75px"
                                                                                            listwidth="100px"
                                                                                            immediateUpload="true"
                                                                                            allowFlash="false"
                                                                                            acceptedTypes="er7,xml,json,txt"
                                                                                            onclear="reRenderInitEgMsgUploadDialog()"
                                                                                            onuploadcanceled="reRenderInitEgMsgUploadDialog()"
                                                                                            uploadControlLabel="#{messages['net.ihe.gazelle.UploadSelectedFile']}"
                                                                                            uploadButtonClass="gzl-btn"
                                                                                            rendered="#{empty testsDefinitionsAdministrationManager.initiatorExampleMsg}">
                                                                                        <f:attribute
                                                                                                name="testStepRole"
                                                                                                value="INITIATOR"/>
                                                                                        <f:attribute
                                                                                                name="configFileType"
                                                                                                value="EXAMPLE_MESSAGE"/>
                                                                                    </rich:fileUpload>
                                                                                    <a4j:commandButton
                                                                                            id="initiatorExampleMsgUploadCancelBtn"
                                                                                            styleClass="gzl-btn"
                                                                                            value="#{messages['gazelle.tm.cancel']}"
                                                                                            actionListener="#{testsDefinitionsAdministrationManager.cancelFileUpload}"
                                                                                            oncomplete="reRenderInitEgMsgUploadDialog()"
                                                                                            rendered="#{empty testsDefinitionsAdministrationManager.initiatorExampleMsg}"/>
                                                                                </a4j:outputPanel>
                                                                            </s:decorate>
                                                                        </a4j:region>

                                                                    </td>
                                                                    <td valign="top" colspan="2"
                                                                        id="responderEgMsgDefTd">

                                                                        <a4j:region id="responderExampleMsgRegion">
                                                                            <s:decorate
                                                                                    id="responderExampleMsgDecoration"
                                                                                    template="/layout/form/_edit.xhtml">
                                                                                <ui:param name="id"
                                                                                          value="exampleMessRespInput"/>
                                                                                <ui:define name="label">
                                                                                    #{messages['gazelle.tm.testdefinitions.ExampleMessageForResponder']}
                                                                                </ui:define>
                                                                                <a4j:outputPanel
                                                                                        id="responderExampleMsgUploadDialog">
                                                                                    <a
                                                                                            style="display:#{!empty respExampleMsgFileName ? 'inline' : 'none'};"
                                                                                            href="${respExampleMsgUrl}"
                                                                                            onclick="window.open('${respExampleMsgUrl}', '#{respExampleMsgFileName}','${exampleMsgPopupOptions}');return false;">#{respExampleMsgFileName}</a>
                                                                                    <a4j:commandButton
                                                                                            styleClass="gzl-btn"
                                                                                            value="#{messages['net.ihe.gazelle.tm.Change']}"
                                                                                            rendered="#{!empty testsDefinitionsAdministrationManager.responderExampleMsg}"
                                                                                            actionListener="#{testsDefinitionsAdministrationManager.changeFile}"
                                                                                            render="responderExampleMsgDecoration">
                                                                                        <f:attribute
                                                                                                name="testStepRole"
                                                                                                value="RESPONDER"/>
                                                                                        <f:attribute
                                                                                                name="configFileType"
                                                                                                value="EXAMPLE_MESSAGE"/>
                                                                                    </a4j:commandButton>
                                                                                    <br/>
                                                                                    <h:inputTextarea
                                                                                            id="exampleMessRespInput"
                                                                                            styleClass=" form-control"
                                                                                            readonly="true"
                                                                                            cols="60"
                                                                                            rows="8"
                                                                                            rendered="#{!empty testsDefinitionsAdministrationManager.responderExampleMsg}"
                                                                                            value="#{testsDefinitionsAdministrationManager.responderExampleMsg.dataAsString}"/>
                                                                                    <h:outputText
                                                                                            value="#{messages['gazelle.tm.testdefinitions.Supportfiletypes']}: #{messages['net.ihe.gazelle.tm.XML']}, #{messages['net.ihe.gazelle.tm.ER7']}, #{messages['net.ihe.gazelle.tm.JSON']}, #{messages['net.ihe.gazelle.tm.TXT']}"
                                                                                            rendered="#{empty testsDefinitionsAdministrationManager.responderExampleMsg}"/>
                                                                                    <rich:fileUpload
                                                                                            fileUploadListener="#{testsDefinitionsAdministrationManager.fileUploadListener}"
                                                                                            maxFilesQuantity="1"
                                                                                            addControlLabel="#{messages['gazelle.tm.testdefinitions.ChooseFileToUpload']}"
                                                                                            id="responderExampleMsgFileUpload"
                                                                                            listHeight="75px"
                                                                                            listwidth="100px"
                                                                                            immediateUpload="true"
                                                                                            allowFlash="false"
                                                                                            acceptedTypes="er7,xml,txt,hl7,json"
                                                                                            onclear="reRenderRspEgMsgUploadDialog()"
                                                                                            onuploadcanceled="reRenderRspEgMsgUploadDialog()"
                                                                                            uploadControlLabel="#{messages['net.ihe.gazelle.UploadSelectedFile']}"
                                                                                            uploadButtonClass="gzl-btn"
                                                                                            rendered="#{empty testsDefinitionsAdministrationManager.responderExampleMsg}">
                                                                                        <f:attribute
                                                                                                name="testStepRole"
                                                                                                value="RESPONDER"/>
                                                                                        <f:attribute
                                                                                                name="configFileType"
                                                                                                value="EXAMPLE_MESSAGE"/>
                                                                                    </rich:fileUpload>
                                                                                    <a4j:commandButton
                                                                                            id="responderExampleMsgUploadCancelBtn"
                                                                                            styleClass="gzl-btn"
                                                                                            value="#{messages['gazelle.tm.cancel']}"
                                                                                            actionListener="#{testsDefinitionsAdministrationManager.cancelFileUpload}"
                                                                                            oncomplete="reRenderRspEgMsgUploadDialog()"
                                                                                            rendered="#{empty testsDefinitionsAdministrationManager.responderExampleMsg}"/>
                                                                                </a4j:outputPanel>
                                                                            </s:decorate>
                                                                        </a4j:region>

                                                                    </td>
                                                                </tr>
                                                                </tbody>
                                                            </table>
                                                            <rich:jQuery selector="#rolesConfigurationPanel tr:even"
                                                                         timing="domready"
                                                                         query="addClass(even_row)"/>
                                                            <rich:jQuery selector="#rolesConfigurationPanel tr:odd"
                                                                         timing="domready"
                                                                         query="addClass(odd_row)"/>
                                                        </td>
                                                    </tr>
                                                </table>
                                                <a4j:region id="optionRegionITB">
                                                    <s:decorate id="optionDecorationITB"
                                                                template="/layout/form/_edit.xhtml">
                                                        <ui:define name="label">#{messages['gazelle.tf.LabelOption']}
                                                        </ui:define>
                                                        <h:selectOneMenu styleClass="form-control gzl-form-control"
                                                                         id="testStepsOptionListBoxITB"
                                                                         value="#{testsDefinitionsAdministrationManager.selectedTestSteps.testStepsOption}"
                                                                         style="font-weight:bold;text-align:center;">
                                                            <s:selectItems
                                                                    value="#{testsDefinitionsAdministrationManager.possibleTestStepsOptions}"
                                                                    var="selectedTestStepsOption"
                                                                    hideNoSelectionLabel="true"
                                                                    label="#{selectedTestStepsOption.labelToDisplay}"/>
                                                        </h:selectOneMenu>
                                                    </s:decorate>
                                                </a4j:region>
                                                <a4j:region id="testStepsDescriptionRegionITB">
                                                    <s:decorate id="testStepsDescriptionDecorationITB"
                                                                template="/layout/form/_edit.xhtml">
                                                        <ui:param name="id" value="descarea"/>
                                                        <ui:define name="label">
                                                            #{messages['gazelle.tf.table.Description']}
                                                        </ui:define>
                                                        <h:inputTextarea styleClass=" form-control" rows="10" cols="100"
                                                                         id="descarea"
                                                                         value="#{testsDefinitionsAdministrationManager.selectedTestSteps.description}">
                                                            <a4j:ajax event="blur"
                                                                      render="testStepsDescriptionDecorationITB"
                                                                      listener="#{testsDefinitionsAdministrationManager.validateTestStepsDescription()}"/>
                                                        </h:inputTextarea>
                                                    </s:decorate>
                                                </a4j:region>
                                                <br/><br/>
                                                <s:div id="ListCIInputITB">
                                                    <h:panelGrid columns="5" id="columnGrToCIInITB">
                                                        <h:outputText
                                                                value="#{messages['gazelle.tm.ContextualInformationInput']}"
                                                                style="font-weight:bold;"/>

                                                        <a4j:commandLink event="click"
                                                                         title="#{messages['gazelle.tm.AddContextualInformation']}"
                                                                         oncomplete="jq162('#AddContextualInformation').modal('show');"
                                                                         execute="@this"
                                                                         render=" :CIForm"
                                                                         actionListener="#{testsDefinitionsAdministrationManager.initializeContextualInformation(1)}">
                                                            <span class="gzl-icon-plus"/>
                                                        </a4j:commandLink>

                                                        <a4j:commandLink event="click"
                                                                         title="#{messages['gazelle.tm.LinkToContextualInformation']}"
                                                                         oncomplete="jq162('#LinkContextualInformation').modal('show');"
                                                                         execute="@this"
                                                                         render="LinkContextualInformation, :CILinkForm"
                                                                         actionListener="#{testsDefinitionsAdministrationManager.initializeContextualInformation(1)}">
                                                            <span class="gzl-icon-arrow-circle-down"/>
                                                        </a4j:commandLink>

                                                    </h:panelGrid>
                                                    <br/>
                                                    <rich:dataTable id="dataTabOfCIITB" var="currentCI"
                                                                    value="#{testsDefinitionsAdministrationManager.selectedTestSteps.inputContextualInformationList}"
                                                                    rowKeyVar="rowNumber"
                                                                    rendered="#{testsDefinitionsAdministrationManager.viewTableOfCIInput()}"


                                                                    rows="10" render="ds">
                                                        <g:column sortBy="#{'id'}"
                                                                  sortOrder="ascending">
                                                            <ui:define name="header">#{messages['gazelle.tf.table.Id']}
                                                            </ui:define>
                                                            <h:outputText value="#{currentCI.id}"/>
                                                        </g:column>
                                                        <g:column sortBy="#{'label'}"
                                                                  sortOrder="ascending">
                                                            <ui:define name="header">
                                                                #{messages['gazelle.tf.table.Label']}
                                                            </ui:define>
                                                            <h:outputText value="#{currentCI.label}"/>
                                                        </g:column>
                                                        <g:column sortBy="#{'path'}"
                                                                  sortOrder="ascending">
                                                            <ui:define name="header">
                                                                #{messages['gazelle.financial.invoice.InvoicePathForArray']}
                                                            </ui:define>
                                                            <h:outputText value="#{currentCI.path.keyword}"/>
                                                        </g:column>
                                                        <g:column sortBy="#{'value'}"
                                                                  sortOrder="ascending">
                                                            <ui:define name="header">
                                                                #{messages['gazelle.tm.testing.instance.ValueURL']}
                                                            </ui:define>
                                                            <h:outputText value="#{currentCI.value}"/>
                                                        </g:column>
                                                        <g:column>
                                                            <ui:define name="header">
                                                                #{messages['gazelle.common.Action']}
                                                            </ui:define>
                                                            <div class="gzl-never-wrap">

                                                                <a4j:commandLink event="click"
                                                                                 rendered="#{applicationPreferenceManager.isPossibleToDeleteOnGMM()}"
                                                                                 oncomplete="jq162('#DeleteCIModal').modal('show');"
                                                                                 render="DeleteCIModal, :deleteCIForm"
                                                                                 actionListener="#{testsDefinitionsAdministrationManager.updateSelectedContextualInformationForInput(currentCI)}">
                                                                    <span class="gzl-icon-trash-o"/>
                                                                </a4j:commandLink>

                                                                <a4j:commandLink event="click"
                                                                                 rendered="#{testsDefinitionsAdministrationManager.canEditCIAsInput(currentCI)}"
                                                                                 oncomplete="jq162('#AddContextualInformation').modal('show');"
                                                                                 render=" :CIForm"
                                                                                 actionListener="#{testsDefinitionsAdministrationManager.updateSelectedContextualInformation(currentCI,1)}">
                                                                    <span class="gzl-icon-pencil"/>
                                                                </a4j:commandLink>

                                                            </div>
                                                        </g:column>
                                                        <f:facet name="footer">
                                                            <rich:dataScroller id="ds" maxPages="10"
                                                                               renderIfSinglePage="false"/>
                                                        </f:facet>
                                                    </rich:dataTable>
                                                </s:div>
                                                <br/>
                                                <s:div id="ListCIOutputITB">
                                                    <h:panelGrid columns="3" id="columnGrToCIOutITB">
                                                        <h:outputText
                                                                value="#{messages['gazelle.tm.ContextualInformationOutput']}"
                                                                style="font-weight:bold;"/>


                                                        <a4j:commandLink event="click"
                                                                         title="#{messages['gazelle.tm.AddContextualInformation']}"
                                                                         oncomplete="jq162('#AddContextualInformation').modal('show');"
                                                                         execute="@this"
                                                                         render=" :CIForm"
                                                                         actionListener="#{testsDefinitionsAdministrationManager.initializeContextualInformation(2)}">
                                                            <span class="gzl-icon-plus"/>
                                                        </a4j:commandLink>
                                                    </h:panelGrid>
                                                    <br/><br/>
                                                    <rich:dataTable id="dataTabOfCIOutITB" var="currentCI"
                                                                    value="#{testsDefinitionsAdministrationManager.selectedTestSteps.outputContextualInformationList}"
                                                                    rowKeyVar="rowNumber"
                                                                    rendered="#{testsDefinitionsAdministrationManager.viewTableOfCIOutput()}"


                                                                    rows="10" render="dsOut">
                                                        <g:column sortBy="#{'id'}"
                                                                  sortOrder="ascending">
                                                            <ui:define name="header">#{messages['gazelle.tf.table.Id']}
                                                            </ui:define>
                                                            <h:outputText value="#{currentCI.id}"/>
                                                        </g:column>
                                                        <g:column sortBy="#{'label'}"
                                                                  sortOrder="ascending">
                                                            <ui:define name="header">
                                                                #{messages['gazelle.tf.table.Label']}
                                                            </ui:define>
                                                            <h:outputText value="#{currentCI.label}"/>
                                                        </g:column>
                                                        <g:column sortBy="#{'path'}"
                                                                  sortOrder="ascending">
                                                            <ui:define name="header">
                                                                #{messages['gazelle.financial.invoice.InvoicePathForArray']}
                                                            </ui:define>
                                                            <h:outputText value="#{currentCI.path.keyword}"/>
                                                        </g:column>
                                                        <g:column sortBy="#{'value'}"
                                                                  sortOrder="ascending">
                                                            <ui:define name="header">
                                                                #{messages['gazelle.tm.testing.instance.ValueURL']}
                                                            </ui:define>
                                                            <h:outputText value="#{currentCI.value}"/>
                                                        </g:column>
                                                        <g:column>
                                                            <ui:define name="header">
                                                                #{messages['gazelle.common.Action']}
                                                            </ui:define>
                                                            <div class="gzl-never-wrap">

                                                                <a4j:commandLink event="click"
                                                                                 rendered="#{applicationPreferenceManager.isPossibleToDeleteOnGMM()}"
                                                                                 oncomplete="jq162('#DeleteCIModal').modal('show');"
                                                                                 render="DeleteCIModal, :deleteCIForm"
                                                                                 actionListener="#{testsDefinitionsAdministrationManager.updateSelectedContextualInformationForOutput(currentCI)}">
                                                                    <span class="gzl-icon-trash-o"/>
                                                                </a4j:commandLink>

                                                                <a4j:commandLink event="click"
                                                                                 oncomplete="jq162('#AddContextualInformation').modal('show');"
                                                                                 render=" :CIForm"
                                                                                 actionListener="#{testsDefinitionsAdministrationManager.updateSelectedContextualInformation(currentCI,2)}">
                                                                    <span class="gzl-icon-pencil"/>
                                                                </a4j:commandLink>

                                                            </div>
                                                        </g:column>
                                                        <f:facet name="footer">
                                                            <rich:dataScroller id="dsOut" maxPages="10"
                                                                               renderIfSinglePage="false"/>
                                                        </f:facet>
                                                    </rich:dataTable>
                                                </s:div>
                                                <div align="right">
                                                    <a4j:commandButton value="#{messages['gazelle.tm.AddThisStep']}"
                                                                       id="addthisstepsITB"
                                                                       actionListener="#{testsDefinitionsAdministrationManager.persistSelectedTestSteps()}"
                                                                       styleClass="gzl-btn"
                                                                       rendered="#{testsDefinitionsAdministrationManager.selectedTestSteps.id == null and s:hasPermission('TestsDefinitionsAdministrationManager', 'EditTest', null)}"
                                                                       render="testStepsManagement"/>
                                                    <a4j:commandButton value="#{messages['gazelle.tm.UpdateThisStep']}"
                                                                       id="updatethisstepsITB"
                                                                       actionListener="#{testsDefinitionsAdministrationManager.persistSelectedTestStepsAndDeleteNonUsedCI()}"
                                                                       styleClass="gzl-btn"
                                                                       rendered="#{testsDefinitionsAdministrationManager.selectedTestSteps.id != null and s:hasPermission('TestsDefinitionsAdministrationManager', 'EditTest', null)}"
                                                                       render="testStepsManagement"/>
                                                </div>
                                                <a4j:commandButton styleClass="gzl-btn" id="canceditITB"
                                                                   value="#{messages['gazelle.common.button.Cancel']}"
                                                                   actionListener="#{testsDefinitionsAdministrationManager.cancelTestStepsCreation()}"
                                                                   rendered="#{s:hasPermission('TestsDefinitionsAdministrationManager', 'EditTest', null)}"
                                                                   render="testStepsManagement" execute="@this"/>
                                            </ui:decorate>
                                        </h:panelGroup>
                                        <!-- ============================ --><!-- END ITB Test Step Definition --><!-- Panel                        --><!-- ============================ -->
                                    </s:div>

                                </s:div>
                            </div>
                        </h:panelGroup>
                    </div>
                </div>

                <f:subview id="subview_2">
                    <ui:decorate id="comments" template="/layout/panels/_panel_title_fixed_id.xhtml">
                        <ui:param name="panel_id" value="comments"/>
                        <ui:define name="panel_title">#{messages['gazelle.tm.UserComments']}</ui:define>
                        <ui:include src="/testing/testsDefinition/userCommentsList.xhtml">
                            <ui:param name="containerPanelId" value="comments"/>
                            <ui:param name="testId" value="#{testDefinitionManager.getSelectedTest().id}"/>
                        </ui:include>
                    </ui:decorate>
                </f:subview>
                <br/>
                <h:commandButton styleClass="gzl-btn"
                                 rendered="#{testsDefinitionsAdministrationManager.selectedTest.id != null}"
                                 value="#{messages['gazelle.tm.Preview']}"
                                 action="#{testsDefinitionsAdministrationManager.viewTest(testsDefinitionsAdministrationManager.selectedTest)}"/>
                <a4j:commandButton styleClass="gzl-btn" id="BackButton2"
                                   value="#{messages['gazelle.tm.BackToTestList']}"
                                   action="#{testsDefinitionsAdministrationManager.cancelTestCreationWithReturn()}"
                                   execute="@this"/>
            </ui:decorate>


        </h:form>

        <h:form id="testRoleDeleteForm">
            <s:token allowMultiplePosts="true"/>
            <ui:decorate template="/layout/popup/_popup_title_footer.xhtml">
                <ui:param name="popup_id" value="testRoleDeleteModalPanel"/>
                <ui:define name="popup_title">#{messages['gazelle.tm.roleInTest.DeleteTestRole']}</ui:define>
                <p>#{messages['gazelle.tm.roleInTest.DeleteTestRole']}
                    #{testsDefinitionsAdministrationManager.selectedTestRoles.roleInTest.keyword} ?</p>
                <ui:define name="popup_footer">
                    <button type="button" class="gzl-btn" data-dismiss="modal">
                        #{messages['gazelle.tm.Cancel']}
                    </button>
                    <a4j:commandButton id="yesDeleteTR" styleClass="gzl-btn-red"
                                       actionListener="#{testsDefinitionsAdministrationManager.deleteTestRole()}"
                                       oncomplete="jq162('#testRoleDeleteModalPanel').modal('hide');"
                                       value="#{messages['gazelle.common.Yes']}"
                                       render="displayRoles,globalMessageDiv"
                                       execute="@this"/>
                </ui:define>
            </ui:decorate>
        </h:form>

        <h:form id="TestStepsDeleteConfirmationForm">
            <s:token allowMultiplePosts="true"/>
            <ui:decorate template="/layout/popup/_popup_title_footer.xhtml">
                <ui:param name="popup_id" value="TestStepsDeleteConfirmationModalPanel"/>
                <ui:define name="popup_title">#{messages['gazelle.tm.DeleteTestStep']}</ui:define>
                <p>#{messages['gazelle.tm.DeleteTestStep']}</p>
                <ui:define name="popup_footer">
                    <button type="button" class="gzl-btn" data-dismiss="modal">
                        #{messages['gazelle.tm.Cancel']}
                    </button>
                    <a4j:commandButton id="TestStepsDeleteConfirmationPanelButton"
                                       value="#{messages['gazelle.common.button.Delete']}"
                                       styleClass="gzl-btn-red" ignoreDupResponses="true"
                                       actionListener="#{testsDefinitionsAdministrationManager.deleteSelectedTestSteps()}"
                                       onclick="jq162('#TestStepsDeleteConfirmationModalPanel').modal('hide');"
                                       render="testStepsManagement"/>
                </ui:define>
            </ui:decorate>
        </h:form>

        <!--  modal panel for adding contextual information -->
        <h:form id="CIForm">
            <s:token allowMultiplePosts="true"/>
            <ui:decorate template="/layout/popup/_popup_title_footer.xhtml">
                <ui:param name="popup_id" value="AddContextualInformation"/>
                <ui:define name="popup_title">#{messages['gazelle.tm.AddContextualInformation']}</ui:define>
                <s:validateAll>
                    <s:decorate id="declabelCI" template="/layout/form/_edit.xhtml">
                        <ui:param name="id" value="inpCILabel"/>
                        <ui:define name="label">#{messages['gazelle.tf.table.Label']}</ui:define>
                        <h:inputText styleClass=" form-control" id="inpCILabel"
                                     value="#{testsDefinitionsAdministrationManager.selectedContextualInformation.label}"
                                     required="true"/>
                    </s:decorate>
                    <s:decorate id="decpathCI" template="/layout/form/_edit.xhtml">
                        <ui:define name="label">#{messages['gazelle.financial.invoice.InvoicePathForArray']}
                        </ui:define>
                        <h:selectOneMenu styleClass="form-control gzl-form-control" id="StatusListBox"
                                         value="#{testsDefinitionsAdministrationManager.selectedContextualInformation.path}"
                                         required="true">
                            <s:selectItems id="ListStatusSelectItems" value="#{pathManager.getAllPath()}"
                                           var="selectedPath"
                                           noSelectionLabel="#{messages['gazelle.common.PleaseSelect']}"
                                           label="#{selectedPath.keyword}"/>
                            <s:convertEntity/>
                        </h:selectOneMenu>
                    </s:decorate>
                    <s:decorate id="decvalueCI" template="/layout/form/_edit.xhtml">
                        <ui:param name="id" value="inpCIvalue"/>
                        <ui:define name="label">#{messages['gazelle.tm.testing.instance.ValueURL']}</ui:define>
                        <h:inputText styleClass=" form-control" id="inpCIvalue"
                                     value="#{testsDefinitionsAdministrationManager.selectedContextualInformation.value}"/>
                    </s:decorate>
                </s:validateAll>
                <ui:define name="popup_footer">
                    <button type="button" class="gzl-btn" data-dismiss="modal">
                        #{messages['gazelle.tm.Cancel']}
                    </button>
                    <a4j:commandButton id="ConfCIbutton" value="#{messages['gazelle.common.button.Confirm']}"
                                       styleClass="gzl-btn-green"
                                       actionListener="#{testsDefinitionsAdministrationManager.addSelectedCIToTestSteps()}"
                                       onclick="jq162('#AddContextualInformation').modal('hide');"
                                       render="ListCIInputITB,ListCIOutputITB,messageDecoration"/>
                </ui:define>
            </ui:decorate>
        </h:form>

        <!--  modal panel for linking contextual information -->
        <h:form id="CILinkForm">
            <s:token allowMultiplePosts="true"/>
            <ui:decorate template="/layout/popup/_popup_title_footer.xhtml">
                <ui:param name="popup_id" value="LinkContextualInformation"/>
                <ui:define name="popup_title">#{messages['gazelle.tm.LinkContextualInformation']}</ui:define>
                <h:selectOneMenu styleClass="form-control gzl-form-control" id="CILinkvall"
                                 value="#{testsDefinitionsAdministrationManager.selectedContextualInformation}"
                                 required="true">
                    <s:selectItems id="ListCIItems"
                                   value="#{testsDefinitionsAdministrationManager.possibleContextualInformations}"
                                   var="selectedCI"
                                   noSelectionLabel="#{messages['gazelle.common.PleaseSelect']}"
                                   label="#{selectedCI.id} :: #{selectedCI.label} - #{selectedCI.path.keyword}"/>
                    <s:convertEntity/>
                </h:selectOneMenu>
                <ui:define name="popup_footer">
                    <button type="button" class="gzl-btn" data-dismiss="modal">
                        #{messages['gazelle.tm.Cancel']}
                    </button>
                    <a4j:commandButton id="LinkCIbutton" value="#{messages['gazelle.common.button.Confirm']}"
                                       styleClass="gzl-btn-green"
                                       actionListener="#{testsDefinitionsAdministrationManager.addSelectedCIToTestSteps()}"
                                       onclick="jq162('#LinkContextualInformation').modal('hide');"
                                       render="ListCIInputITB,ListCIOutputITB,messageDecoration"/>
                </ui:define>
            </ui:decorate>
        </h:form>

        <!-- Delete selected CI -->
        <h:form id="deleteCIForm">
            <s:token allowMultiplePosts="true"/>
            <ui:decorate template="/layout/popup/_popup_title_footer.xhtml">
                <ui:param name="popup_id" value="DeleteCIModal"/>
                <ui:define name="popup_title">#{messages['gazelle.tm.DeleteContextualInformation']}</ui:define>
                <p>#{messages['net.ihe.gazelle.tm.AreYouSureYouWantToDoThis']}</p>
                <ui:define name="popup_footer">
                    <button type="button" class="gzl-btn" data-dismiss="modal">
                        #{messages['gazelle.tm.Cancel']}
                    </button>
                    <a4j:commandButton id="deleteCIbutton"
                                       value="#{messages['gazelle.tm.DeleteThisContextualInformation']}"
                                       styleClass="gzl-btn-red"
                                       actionListener="#{testsDefinitionsAdministrationManager.deleteSelectedContextualInformation()}"
                                       onclick="jq162('#DeleteCIModal').modal('hide');"
                                       render="ListCIInputITB,ListCIOutputITB,messageDecoration"/>
                </ui:define>
            </ui:decorate>
        </h:form>

        <!--@formatter:off-->
        <s:span id="spinnerScript">
            <script>
                disable_input_spinner_mouse_wheel('#{rich:clientId('roleInTestNumberToRealizeInputText')}');
                disable_input_spinner_mouse_wheel('#{rich:clientId('roleInTestCardMinInputText')}');
                disable_input_spinner_mouse_wheel('#{rich:clientId('roleInTestCardMaxInputText')}');
            </script>
        </s:span>
        <!--@formatter:on-->
    </ui:define>
</ui:composition>
